/*
 *  Warning: Do not edit this file.
 *  Auto-generated by 'beam_makeops'.
 */

#ifndef __OPCODES_H__
#define __OPCODES_H__

#define BEAM_FORMAT_NUMBER 0
#define MAX_GENERIC_OPCODE 152
#define NUM_GENERIC_OPS 329
#define NUM_SPECIFIC_OPS 429

#ifdef ARCH_64
#  define BEAM_LOOSE_MASK 0x1FFFUL
#if HALFWORD_HEAP
#  define BEAM_TIGHT_MASK 0x1FFCUL
#else
#  define BEAM_TIGHT_MASK 0x1FF8UL
#endif
#  define BEAM_LOOSE_SHIFT 16
#  define BEAM_TIGHT_SHIFT 16
#else
#  define BEAM_LOOSE_MASK 0xFFF
#  define BEAM_TIGHT_MASK 0xFFC
#  define BEAM_LOOSE_SHIFT 16
#  define BEAM_TIGHT_SHIFT 10
#endif

/*
 * The following operand types for generic instructions
 * occur in beam files.
 */

#define TAG_u 0
#define TAG_i 1
#define TAG_a 2
#define TAG_x 3
#define TAG_y 4
#define TAG_f 5
#define TAG_h 6
#define TAG_z 7

/*
 * The following operand types are only used in the loader.
 */

#define TAG_n 8
#define TAG_p 9
#define TAG_r 10
#define TAG_v 11
#define TAG_l 12
#define TAG_q 13

#define BEAM_NUM_TAGS 14

#define TOP_call 0
#define TOP_commit 1
#define TOP_end 2
#define TOP_fail 3
#define TOP_is_bif 4
#define TOP_is_eq 5
#define TOP_is_func 6
#define TOP_is_not_bif 7
#define TOP_is_op 8
#define TOP_is_same_var 9
#define TOP_is_type 10
#define TOP_new_instr 11
#define TOP_next_arg 12
#define TOP_next_instr 13
#define TOP_pred 14
#define TOP_rest_args 15
#define TOP_set_var_next_arg 16
#define TOP_store_op 17
#define TOP_store_type 18
#define TOP_store_val 19
#define TOP_store_var 20
#define TOP_try_me_else 21
#define NUM_TOPS 22

#define TE_MAX_VARS 8

extern char tag_to_letter[];
extern Uint op_transform[];

#define op_allocate_tt 0
#define op_allocate_heap_III 1
#define op_allocate_heap_zero_III 2
#define op_allocate_init_tIy 3
#define op_allocate_zero_tt 4
#define op_apply_I 5
#define op_apply_bif 6
#define op_apply_last_IP 7
#define op_badarg_j 8
#define op_badmatch_s 9
#define op_bif1_fbsd 10
#define op_bif1_body_bsd 11
#define op_bs_context_to_binary_r 12
#define op_bs_context_to_binary_x 13
#define op_bs_context_to_binary_y 14
#define op_bs_init_writable 15
#define op_bs_put_string_II 16
#define op_bs_test_tail_imm2_frI 17
#define op_bs_test_tail_imm2_fxI 18
#define op_bs_test_unit_frI 19
#define op_bs_test_unit_fxI 20
#define op_bs_test_unit8_fr 21
#define op_bs_test_unit8_fx 22
#define op_bs_test_zero_tail2_fr 23
#define op_bs_test_zero_tail2_fx 24
#define op_call_bif0_e 25
#define op_call_bif1_e 26
#define op_call_bif2_e 27
#define op_call_bif3_e 28
#define op_call_error_handler 29
#define op_call_nif 30
#define op_call_traced_function 31
#define op_case_end_s 32
#define op_catch_yf 33
#define op_catch_end_y 34
#define op_continue_exit 35
#define op_deallocate_I 36
#define op_deallocate_return_P 37
#define op_error_action_code 38
#define op_extract_next_element_x 39
#define op_extract_next_element_y 40
#define op_extract_next_element2_x 41
#define op_extract_next_element2_y 42
#define op_extract_next_element3_x 43
#define op_extract_next_element3_y 44
#define op_fclearerror 45
#define op_fconv_dl 46
#define op_fmove_ql 47
#define op_fmove_dl 48
#define op_fmove_new_ld 49
#define op_get_list_rrx 50
#define op_get_list_rry 51
#define op_get_list_rxr 52
#define op_get_list_rxx 53
#define op_get_list_rxy 54
#define op_get_list_ryr 55
#define op_get_list_ryx 56
#define op_get_list_ryy 57
#define op_get_list_xrx 58
#define op_get_list_xry 59
#define op_get_list_xxr 60
#define op_get_list_xxx 61
#define op_get_list_xxy 62
#define op_get_list_xyr 63
#define op_get_list_xyx 64
#define op_get_list_xyy 65
#define op_get_list_yrx 66
#define op_get_list_yry 67
#define op_get_list_yxr 68
#define op_get_list_yxx 69
#define op_get_list_yxy 70
#define op_get_list_yyr 71
#define op_get_list_yyx 72
#define op_get_list_yyy 73
#define op_i_apply 74
#define op_i_apply_fun 75
#define op_i_apply_fun_last_P 76
#define op_i_apply_fun_only 77
#define op_i_apply_last_P 78
#define op_i_apply_only 79
#define op_i_band_jId 80
#define op_i_bif2_fbd 81
#define op_i_bif2_body_bd 82
#define op_i_bor_jId 83
#define op_i_bs_add_jId 84
#define op_i_bs_append_jIIId 85
#define op_i_bs_get_binary2_frIsId 86
#define op_i_bs_get_binary2_fxIsId 87
#define op_i_bs_get_binary_all2_frIId 88
#define op_i_bs_get_binary_all2_fxIId 89
#define op_i_bs_get_binary_all_reuse_rfI 90
#define op_i_bs_get_binary_all_reuse_xfI 91
#define op_i_bs_get_binary_imm2_frIIId 92
#define op_i_bs_get_binary_imm2_fxIIId 93
#define op_i_bs_get_float2_frIsId 94
#define op_i_bs_get_float2_fxIsId 95
#define op_i_bs_get_integer_fIId 96
#define op_i_bs_get_integer_16_rfd 97
#define op_i_bs_get_integer_16_xfd 98
#define op_i_bs_get_integer_32_rfId 99
#define op_i_bs_get_integer_32_xfId 100
#define op_i_bs_get_integer_8_rfd 101
#define op_i_bs_get_integer_8_xfd 102
#define op_i_bs_get_integer_imm_rIIfId 103
#define op_i_bs_get_integer_imm_xIIfId 104
#define op_i_bs_get_integer_small_imm_rIfId 105
#define op_i_bs_get_integer_small_imm_xIfId 106
#define op_i_bs_get_utf16_rfId 107
#define op_i_bs_get_utf16_xfId 108
#define op_i_bs_get_utf8_rfd 109
#define op_i_bs_get_utf8_xfd 110
#define op_i_bs_init_IId 111
#define op_i_bs_init_bits_IId 112
#define op_i_bs_init_bits_fail_rjId 113
#define op_i_bs_init_bits_fail_xjId 114
#define op_i_bs_init_bits_fail_yjId 115
#define op_i_bs_init_bits_fail_heap_IjId 116
#define op_i_bs_init_bits_heap_IIId 117
#define op_i_bs_init_fail_rjId 118
#define op_i_bs_init_fail_xjId 119
#define op_i_bs_init_fail_yjId 120
#define op_i_bs_init_fail_heap_IjId 121
#define op_i_bs_init_heap_IIId 122
#define op_i_bs_init_heap_bin_IId 123
#define op_i_bs_init_heap_bin_heap_IIId 124
#define op_i_bs_match_string_rfII 125
#define op_i_bs_match_string_xfII 126
#define op_i_bs_private_append_jId 127
#define op_i_bs_put_utf16_jIs 128
#define op_i_bs_put_utf8_js 129
#define op_i_bs_restore2_rI 130
#define op_i_bs_restore2_xI 131
#define op_i_bs_save2_rI 132
#define op_i_bs_save2_xI 133
#define op_i_bs_skip_bits2_frxI 134
#define op_i_bs_skip_bits2_fryI 135
#define op_i_bs_skip_bits2_fxrI 136
#define op_i_bs_skip_bits2_fxxI 137
#define op_i_bs_skip_bits2_fxyI 138
#define op_i_bs_skip_bits_all2_frI 139
#define op_i_bs_skip_bits_all2_fxI 140
#define op_i_bs_skip_bits_imm2_frI 141
#define op_i_bs_skip_bits_imm2_fxI 142
#define op_i_bs_start_match2_rfIId 143
#define op_i_bs_start_match2_xfIId 144
#define op_i_bs_start_match2_yfIId 145
#define op_i_bs_utf16_size_sd 146
#define op_i_bs_utf8_size_sd 147
#define op_i_bs_validate_unicode_js 148
#define op_i_bs_validate_unicode_retract_j 149
#define op_i_bsl_jId 150
#define op_i_bsr_jId 151
#define op_i_bxor_jId 152
#define op_i_call_f 153
#define op_i_call_ext_e 154
#define op_i_call_ext_last_eP 155
#define op_i_call_ext_only_e 156
#define op_i_call_fun_I 157
#define op_i_call_fun_last_IP 158
#define op_i_call_last_fP 159
#define op_i_call_only_f 160
#define op_i_count_breakpoint 161
#define op_i_debug_breakpoint 162
#define op_i_element_jssd 163
#define op_i_fadd_lll 164
#define op_i_fast_element_jIsd 165
#define op_i_fcheckerror 166
#define op_i_fdiv_lll 167
#define op_i_fetch_rx 168
#define op_i_fetch_ry 169
#define op_i_fetch_xr 170
#define op_i_fetch_xx 171
#define op_i_fetch_xy 172
#define op_i_fetch_yr 173
#define op_i_fetch_yx 174
#define op_i_fetch_yy 175
#define op_i_fetch_rc 176
#define op_i_fetch_xc 177
#define op_i_fetch_yc 178
#define op_i_fetch_cr 179
#define op_i_fetch_cx 180
#define op_i_fetch_cy 181
#define op_i_fetch_cc 182
#define op_i_fetch_ss 183
#define op_i_fmul_lll 184
#define op_i_fnegate_ll 185
#define op_i_fsub_lll 186
#define op_i_func_info_IaaI 187
#define op_i_gc_bif1_jIsId 188
#define op_i_gc_bif2_jIId 189
#define op_i_gc_bif3_jIsId 190
#define op_i_get_sd 191
#define op_i_get_tuple_element_rPr 192
#define op_i_get_tuple_element_rPx 193
#define op_i_get_tuple_element_rPy 194
#define op_i_get_tuple_element_xPr 195
#define op_i_get_tuple_element_xPx 196
#define op_i_get_tuple_element_xPy 197
#define op_i_get_tuple_element_yPr 198
#define op_i_get_tuple_element_yPx 199
#define op_i_get_tuple_element_yPy 200
#define op_i_global_cons 201
#define op_i_global_copy 202
#define op_i_global_tuple 203
#define op_i_hibernate 204
#define op_i_int_bnot_jsId 205
#define op_i_int_div_jId 206
#define op_i_is_eq_f 207
#define op_i_is_eq_exact_f 208
#define op_i_is_eq_immed_frc 209
#define op_i_is_eq_immed_fxc 210
#define op_i_is_eq_immed_fyc 211
#define op_i_is_ge_f 212
#define op_i_is_lt_f 213
#define op_i_is_ne_f 214
#define op_i_is_ne_exact_f 215
#define op_i_jump_on_val_sfII 216
#define op_i_jump_on_val_zero_sfI 217
#define op_i_loop_rec_fr 218
#define op_i_m_div_jId 219
#define op_i_make_fun_It 220
#define op_i_minus_jId 221
#define op_i_move_call_crf 222
#define op_i_move_call_ext_cre 223
#define op_i_move_call_ext_last_ePcr 224
#define op_i_move_call_ext_only_ecr 225
#define op_i_move_call_last_fPcr 226
#define op_i_move_call_only_fcr 227
#define op_i_mtrace_breakpoint 228
#define op_i_new_bs_put_binary_jsIs 229
#define op_i_new_bs_put_binary_all_jsI 230
#define op_i_new_bs_put_binary_imm_jIs 231
#define op_i_new_bs_put_float_jsIs 232
#define op_i_new_bs_put_float_imm_jIIs 233
#define op_i_new_bs_put_integer_jsIs 234
#define op_i_new_bs_put_integer_imm_jIIs 235
#define op_i_plus_jId 236
#define op_i_put_tuple_Anr 237
#define op_i_put_tuple_Anx 238
#define op_i_put_tuple_Arx 239
#define op_i_put_tuple_Ary 240
#define op_i_put_tuple_Axr 241
#define op_i_put_tuple_Axx 242
#define op_i_put_tuple_Axy 243
#define op_i_put_tuple_Ayr 244
#define op_i_put_tuple_Ayx 245
#define op_i_put_tuple_Ayy 246
#define op_i_put_tuple_Acr 247
#define op_i_put_tuple_Acx 248
#define op_i_put_tuple_Acy 249
#define op_i_recv_set 250
#define op_i_rem_jId 251
#define op_i_return_time_trace 252
#define op_i_return_to_trace 253
#define op_i_select_big_sf 254
#define op_i_select_float_sfI 255
#define op_i_select_tuple_arity_sfI 256
#define op_i_select_val_sfI 257
#define op_i_time_breakpoint 258
#define op_i_times_jId 259
#define op_i_trace_breakpoint 260
#define op_i_trim_I 261
#define op_i_wait_error 262
#define op_i_wait_error_locked 263
#define op_i_wait_timeout_fI 264
#define op_i_wait_timeout_fs 265
#define op_i_wait_timeout_locked_fI 266
#define op_i_wait_timeout_locked_fs 267
#define op_i_yield 268
#define op_if_end 269
#define op_init_y 270
#define op_init2_yy 271
#define op_init3_yyy 272
#define op_int_code_end 273
#define op_is_atom_fr 274
#define op_is_atom_fx 275
#define op_is_atom_fy 276
#define op_is_binary_fr 277
#define op_is_binary_fx 278
#define op_is_binary_fy 279
#define op_is_bitstring_fr 280
#define op_is_bitstring_fx 281
#define op_is_bitstring_fy 282
#define op_is_boolean_fr 283
#define op_is_boolean_fx 284
#define op_is_boolean_fy 285
#define op_is_float_fr 286
#define op_is_float_fx 287
#define op_is_float_fy 288
#define op_is_function_fr 289
#define op_is_function_fx 290
#define op_is_function_fy 291
#define op_is_function2_fss 292
#define op_is_integer_fr 293
#define op_is_integer_fx 294
#define op_is_integer_fy 295
#define op_is_integer_allocate_frII 296
#define op_is_integer_allocate_fxII 297
#define op_is_list_fr 298
#define op_is_list_fx 299
#define op_is_list_fy 300
#define op_is_nil_fr 301
#define op_is_nil_fx 302
#define op_is_nil_fy 303
#define op_is_non_empty_list_test_heap_frII 304
#define op_is_nonempty_list_fr 305
#define op_is_nonempty_list_fx 306
#define op_is_nonempty_list_fy 307
#define op_is_nonempty_list_allocate_frII 308
#define op_is_nonempty_list_allocate_fxII 309
#define op_is_number_fr 310
#define op_is_number_fx 311
#define op_is_number_fy 312
#define op_is_pid_fr 313
#define op_is_pid_fx 314
#define op_is_pid_fy 315
#define op_is_port_fr 316
#define op_is_port_fx 317
#define op_is_port_fy 318
#define op_is_reference_fr 319
#define op_is_reference_fx 320
#define op_is_reference_fy 321
#define op_is_tuple_fr 322
#define op_is_tuple_fx 323
#define op_is_tuple_fy 324
#define op_is_tuple_of_arity_frA 325
#define op_is_tuple_of_arity_fxA 326
#define op_is_tuple_of_arity_fyA 327
#define op_jump_f 328
#define op_label_L 329
#define op_loop_rec_end_f 330
#define op_move_nr 331
#define op_move_nx 332
#define op_move_rx 333
#define op_move_ry 334
#define op_move_xr 335
#define op_move_xx 336
#define op_move_xy 337
#define op_move_yr 338
#define op_move_yx 339
#define op_move_yy 340
#define op_move_cr 341
#define op_move_cx 342
#define op_move_cy 343
#define op_move_sd 344
#define op_move2_xyxy 345
#define op_move2_yxyx 346
#define op_move_call_xrf 347
#define op_move_call_yrf 348
#define op_move_call_last_xrfP 349
#define op_move_call_last_yrfP 350
#define op_move_call_only_xrf 351
#define op_move_deallocate_return_nrP 352
#define op_move_deallocate_return_xrP 353
#define op_move_deallocate_return_yrP 354
#define op_move_deallocate_return_crP 355
#define op_move_return_nr 356
#define op_move_return_xr 357
#define op_move_return_cr 358
#define op_node_r 359
#define op_node_x 360
#define op_node_y 361
#define op_normal_exit 362
#define op_on_load 363
#define op_put_n 364
#define op_put_r 365
#define op_put_x 366
#define op_put_y 367
#define op_put_c 368
#define op_put_list_rnx 369
#define op_put_list_rxr 370
#define op_put_list_rxx 371
#define op_put_list_ryx 372
#define op_put_list_xnx 373
#define op_put_list_xrr 374
#define op_put_list_xxr 375
#define op_put_list_xxx 376
#define op_put_list_xyx 377
#define op_put_list_ynx 378
#define op_put_list_yrr 379
#define op_put_list_yrx 380
#define op_put_list_yxx 381
#define op_put_list_yyr 382
#define op_put_list_yyx 383
#define op_put_list_rcr 384
#define op_put_list_rcx 385
#define op_put_list_rcy 386
#define op_put_list_xcr 387
#define op_put_list_xcx 388
#define op_put_list_xcy 389
#define op_put_list_ycr 390
#define op_put_list_ycx 391
#define op_put_list_ycy 392
#define op_put_list_cnr 393
#define op_put_list_cnx 394
#define op_put_list_crr 395
#define op_put_list_crx 396
#define op_put_list_cry 397
#define op_put_list_cxr 398
#define op_put_list_cxx 399
#define op_put_list_cxy 400
#define op_put_list_cyr 401
#define op_put_list_cyx 402
#define op_put_list_cyy 403
#define op_put_list_ssd 404
#define op_raise_ss 405
#define op_recv_mark_f 406
#define op_remove_message 407
#define op_return 408
#define op_return_trace 409
#define op_self_r 410
#define op_self_x 411
#define op_self_y 412
#define op_send 413
#define op_set_tuple_element_sdP 414
#define op_system_limit_j 415
#define op_test_arity_frA 416
#define op_test_arity_fxA 417
#define op_test_arity_fyA 418
#define op_test_heap_II 419
#define op_test_heap_1_put_list_Iy 420
#define op_timeout 421
#define op_timeout_locked 422
#define op_too_old_compiler 423
#define op_try_case_end_s 424
#define op_try_end_y 425
#define op_wait_f 426
#define op_wait_locked_f 427
#define op_wait_unlocked_f 428

#define NUMBER_OF_OPCODES 429
#define op_count_allocate_tt 429
#define op_count_allocate_heap_III 430
#define op_count_allocate_heap_zero_III 431
#define op_count_allocate_init_tIy 432
#define op_count_allocate_zero_tt 433
#define op_count_apply_I 434
#define op_count_apply_bif 435
#define op_count_apply_last_IP 436
#define op_count_badarg_j 437
#define op_count_badmatch_s 438
#define op_count_bif1_fbsd 439
#define op_count_bif1_body_bsd 440
#define op_count_bs_context_to_binary_r 441
#define op_count_bs_context_to_binary_x 442
#define op_count_bs_context_to_binary_y 443
#define op_count_bs_init_writable 444
#define op_count_bs_put_string_II 445
#define op_count_bs_test_tail_imm2_frI 446
#define op_count_bs_test_tail_imm2_fxI 447
#define op_count_bs_test_unit_frI 448
#define op_count_bs_test_unit_fxI 449
#define op_count_bs_test_unit8_fr 450
#define op_count_bs_test_unit8_fx 451
#define op_count_bs_test_zero_tail2_fr 452
#define op_count_bs_test_zero_tail2_fx 453
#define op_count_call_bif0_e 454
#define op_count_call_bif1_e 455
#define op_count_call_bif2_e 456
#define op_count_call_bif3_e 457
#define op_count_call_error_handler 458
#define op_count_call_nif 459
#define op_count_call_traced_function 460
#define op_count_case_end_s 461
#define op_count_catch_yf 462
#define op_count_catch_end_y 463
#define op_count_continue_exit 464
#define op_count_deallocate_I 465
#define op_count_deallocate_return_P 466
#define op_count_error_action_code 467
#define op_count_extract_next_element_x 468
#define op_count_extract_next_element_y 469
#define op_count_extract_next_element2_x 470
#define op_count_extract_next_element2_y 471
#define op_count_extract_next_element3_x 472
#define op_count_extract_next_element3_y 473
#define op_count_fclearerror 474
#define op_count_fconv_dl 475
#define op_count_fmove_ql 476
#define op_count_fmove_dl 477
#define op_count_fmove_new_ld 478
#define op_count_get_list_rrx 479
#define op_count_get_list_rry 480
#define op_count_get_list_rxr 481
#define op_count_get_list_rxx 482
#define op_count_get_list_rxy 483
#define op_count_get_list_ryr 484
#define op_count_get_list_ryx 485
#define op_count_get_list_ryy 486
#define op_count_get_list_xrx 487
#define op_count_get_list_xry 488
#define op_count_get_list_xxr 489
#define op_count_get_list_xxx 490
#define op_count_get_list_xxy 491
#define op_count_get_list_xyr 492
#define op_count_get_list_xyx 493
#define op_count_get_list_xyy 494
#define op_count_get_list_yrx 495
#define op_count_get_list_yry 496
#define op_count_get_list_yxr 497
#define op_count_get_list_yxx 498
#define op_count_get_list_yxy 499
#define op_count_get_list_yyr 500
#define op_count_get_list_yyx 501
#define op_count_get_list_yyy 502
#define op_count_i_apply 503
#define op_count_i_apply_fun 504
#define op_count_i_apply_fun_last_P 505
#define op_count_i_apply_fun_only 506
#define op_count_i_apply_last_P 507
#define op_count_i_apply_only 508
#define op_count_i_band_jId 509
#define op_count_i_bif2_fbd 510
#define op_count_i_bif2_body_bd 511
#define op_count_i_bor_jId 512
#define op_count_i_bs_add_jId 513
#define op_count_i_bs_append_jIIId 514
#define op_count_i_bs_get_binary2_frIsId 515
#define op_count_i_bs_get_binary2_fxIsId 516
#define op_count_i_bs_get_binary_all2_frIId 517
#define op_count_i_bs_get_binary_all2_fxIId 518
#define op_count_i_bs_get_binary_all_reuse_rfI 519
#define op_count_i_bs_get_binary_all_reuse_xfI 520
#define op_count_i_bs_get_binary_imm2_frIIId 521
#define op_count_i_bs_get_binary_imm2_fxIIId 522
#define op_count_i_bs_get_float2_frIsId 523
#define op_count_i_bs_get_float2_fxIsId 524
#define op_count_i_bs_get_integer_fIId 525
#define op_count_i_bs_get_integer_16_rfd 526
#define op_count_i_bs_get_integer_16_xfd 527
#define op_count_i_bs_get_integer_32_rfId 528
#define op_count_i_bs_get_integer_32_xfId 529
#define op_count_i_bs_get_integer_8_rfd 530
#define op_count_i_bs_get_integer_8_xfd 531
#define op_count_i_bs_get_integer_imm_rIIfId 532
#define op_count_i_bs_get_integer_imm_xIIfId 533
#define op_count_i_bs_get_integer_small_imm_rIfId 534
#define op_count_i_bs_get_integer_small_imm_xIfId 535
#define op_count_i_bs_get_utf16_rfId 536
#define op_count_i_bs_get_utf16_xfId 537
#define op_count_i_bs_get_utf8_rfd 538
#define op_count_i_bs_get_utf8_xfd 539
#define op_count_i_bs_init_IId 540
#define op_count_i_bs_init_bits_IId 541
#define op_count_i_bs_init_bits_fail_rjId 542
#define op_count_i_bs_init_bits_fail_xjId 543
#define op_count_i_bs_init_bits_fail_yjId 544
#define op_count_i_bs_init_bits_fail_heap_IjId 545
#define op_count_i_bs_init_bits_heap_IIId 546
#define op_count_i_bs_init_fail_rjId 547
#define op_count_i_bs_init_fail_xjId 548
#define op_count_i_bs_init_fail_yjId 549
#define op_count_i_bs_init_fail_heap_IjId 550
#define op_count_i_bs_init_heap_IIId 551
#define op_count_i_bs_init_heap_bin_IId 552
#define op_count_i_bs_init_heap_bin_heap_IIId 553
#define op_count_i_bs_match_string_rfII 554
#define op_count_i_bs_match_string_xfII 555
#define op_count_i_bs_private_append_jId 556
#define op_count_i_bs_put_utf16_jIs 557
#define op_count_i_bs_put_utf8_js 558
#define op_count_i_bs_restore2_rI 559
#define op_count_i_bs_restore2_xI 560
#define op_count_i_bs_save2_rI 561
#define op_count_i_bs_save2_xI 562
#define op_count_i_bs_skip_bits2_frxI 563
#define op_count_i_bs_skip_bits2_fryI 564
#define op_count_i_bs_skip_bits2_fxrI 565
#define op_count_i_bs_skip_bits2_fxxI 566
#define op_count_i_bs_skip_bits2_fxyI 567
#define op_count_i_bs_skip_bits_all2_frI 568
#define op_count_i_bs_skip_bits_all2_fxI 569
#define op_count_i_bs_skip_bits_imm2_frI 570
#define op_count_i_bs_skip_bits_imm2_fxI 571
#define op_count_i_bs_start_match2_rfIId 572
#define op_count_i_bs_start_match2_xfIId 573
#define op_count_i_bs_start_match2_yfIId 574
#define op_count_i_bs_utf16_size_sd 575
#define op_count_i_bs_utf8_size_sd 576
#define op_count_i_bs_validate_unicode_js 577
#define op_count_i_bs_validate_unicode_retract_j 578
#define op_count_i_bsl_jId 579
#define op_count_i_bsr_jId 580
#define op_count_i_bxor_jId 581
#define op_count_i_call_f 582
#define op_count_i_call_ext_e 583
#define op_count_i_call_ext_last_eP 584
#define op_count_i_call_ext_only_e 585
#define op_count_i_call_fun_I 586
#define op_count_i_call_fun_last_IP 587
#define op_count_i_call_last_fP 588
#define op_count_i_call_only_f 589
#define op_count_i_count_breakpoint 590
#define op_count_i_debug_breakpoint 591
#define op_count_i_element_jssd 592
#define op_count_i_fadd_lll 593
#define op_count_i_fast_element_jIsd 594
#define op_count_i_fcheckerror 595
#define op_count_i_fdiv_lll 596
#define op_count_i_fetch_rx 597
#define op_count_i_fetch_ry 598
#define op_count_i_fetch_xr 599
#define op_count_i_fetch_xx 600
#define op_count_i_fetch_xy 601
#define op_count_i_fetch_yr 602
#define op_count_i_fetch_yx 603
#define op_count_i_fetch_yy 604
#define op_count_i_fetch_rc 605
#define op_count_i_fetch_xc 606
#define op_count_i_fetch_yc 607
#define op_count_i_fetch_cr 608
#define op_count_i_fetch_cx 609
#define op_count_i_fetch_cy 610
#define op_count_i_fetch_cc 611
#define op_count_i_fetch_ss 612
#define op_count_i_fmul_lll 613
#define op_count_i_fnegate_ll 614
#define op_count_i_fsub_lll 615
#define op_count_i_func_info_IaaI 616
#define op_count_i_gc_bif1_jIsId 617
#define op_count_i_gc_bif2_jIId 618
#define op_count_i_gc_bif3_jIsId 619
#define op_count_i_get_sd 620
#define op_count_i_get_tuple_element_rPr 621
#define op_count_i_get_tuple_element_rPx 622
#define op_count_i_get_tuple_element_rPy 623
#define op_count_i_get_tuple_element_xPr 624
#define op_count_i_get_tuple_element_xPx 625
#define op_count_i_get_tuple_element_xPy 626
#define op_count_i_get_tuple_element_yPr 627
#define op_count_i_get_tuple_element_yPx 628
#define op_count_i_get_tuple_element_yPy 629
#define op_count_i_global_cons 630
#define op_count_i_global_copy 631
#define op_count_i_global_tuple 632
#define op_count_i_hibernate 633
#define op_count_i_int_bnot_jsId 634
#define op_count_i_int_div_jId 635
#define op_count_i_is_eq_f 636
#define op_count_i_is_eq_exact_f 637
#define op_count_i_is_eq_immed_frc 638
#define op_count_i_is_eq_immed_fxc 639
#define op_count_i_is_eq_immed_fyc 640
#define op_count_i_is_ge_f 641
#define op_count_i_is_lt_f 642
#define op_count_i_is_ne_f 643
#define op_count_i_is_ne_exact_f 644
#define op_count_i_jump_on_val_sfII 645
#define op_count_i_jump_on_val_zero_sfI 646
#define op_count_i_loop_rec_fr 647
#define op_count_i_m_div_jId 648
#define op_count_i_make_fun_It 649
#define op_count_i_minus_jId 650
#define op_count_i_move_call_crf 651
#define op_count_i_move_call_ext_cre 652
#define op_count_i_move_call_ext_last_ePcr 653
#define op_count_i_move_call_ext_only_ecr 654
#define op_count_i_move_call_last_fPcr 655
#define op_count_i_move_call_only_fcr 656
#define op_count_i_mtrace_breakpoint 657
#define op_count_i_new_bs_put_binary_jsIs 658
#define op_count_i_new_bs_put_binary_all_jsI 659
#define op_count_i_new_bs_put_binary_imm_jIs 660
#define op_count_i_new_bs_put_float_jsIs 661
#define op_count_i_new_bs_put_float_imm_jIIs 662
#define op_count_i_new_bs_put_integer_jsIs 663
#define op_count_i_new_bs_put_integer_imm_jIIs 664
#define op_count_i_plus_jId 665
#define op_count_i_put_tuple_Anr 666
#define op_count_i_put_tuple_Anx 667
#define op_count_i_put_tuple_Arx 668
#define op_count_i_put_tuple_Ary 669
#define op_count_i_put_tuple_Axr 670
#define op_count_i_put_tuple_Axx 671
#define op_count_i_put_tuple_Axy 672
#define op_count_i_put_tuple_Ayr 673
#define op_count_i_put_tuple_Ayx 674
#define op_count_i_put_tuple_Ayy 675
#define op_count_i_put_tuple_Acr 676
#define op_count_i_put_tuple_Acx 677
#define op_count_i_put_tuple_Acy 678
#define op_count_i_recv_set 679
#define op_count_i_rem_jId 680
#define op_count_i_return_time_trace 681
#define op_count_i_return_to_trace 682
#define op_count_i_select_big_sf 683
#define op_count_i_select_float_sfI 684
#define op_count_i_select_tuple_arity_sfI 685
#define op_count_i_select_val_sfI 686
#define op_count_i_time_breakpoint 687
#define op_count_i_times_jId 688
#define op_count_i_trace_breakpoint 689
#define op_count_i_trim_I 690
#define op_count_i_wait_error 691
#define op_count_i_wait_error_locked 692
#define op_count_i_wait_timeout_fI 693
#define op_count_i_wait_timeout_fs 694
#define op_count_i_wait_timeout_locked_fI 695
#define op_count_i_wait_timeout_locked_fs 696
#define op_count_i_yield 697
#define op_count_if_end 698
#define op_count_init_y 699
#define op_count_init2_yy 700
#define op_count_init3_yyy 701
#define op_count_int_code_end 702
#define op_count_is_atom_fr 703
#define op_count_is_atom_fx 704
#define op_count_is_atom_fy 705
#define op_count_is_binary_fr 706
#define op_count_is_binary_fx 707
#define op_count_is_binary_fy 708
#define op_count_is_bitstring_fr 709
#define op_count_is_bitstring_fx 710
#define op_count_is_bitstring_fy 711
#define op_count_is_boolean_fr 712
#define op_count_is_boolean_fx 713
#define op_count_is_boolean_fy 714
#define op_count_is_float_fr 715
#define op_count_is_float_fx 716
#define op_count_is_float_fy 717
#define op_count_is_function_fr 718
#define op_count_is_function_fx 719
#define op_count_is_function_fy 720
#define op_count_is_function2_fss 721
#define op_count_is_integer_fr 722
#define op_count_is_integer_fx 723
#define op_count_is_integer_fy 724
#define op_count_is_integer_allocate_frII 725
#define op_count_is_integer_allocate_fxII 726
#define op_count_is_list_fr 727
#define op_count_is_list_fx 728
#define op_count_is_list_fy 729
#define op_count_is_nil_fr 730
#define op_count_is_nil_fx 731
#define op_count_is_nil_fy 732
#define op_count_is_non_empty_list_test_heap_frII 733
#define op_count_is_nonempty_list_fr 734
#define op_count_is_nonempty_list_fx 735
#define op_count_is_nonempty_list_fy 736
#define op_count_is_nonempty_list_allocate_frII 737
#define op_count_is_nonempty_list_allocate_fxII 738
#define op_count_is_number_fr 739
#define op_count_is_number_fx 740
#define op_count_is_number_fy 741
#define op_count_is_pid_fr 742
#define op_count_is_pid_fx 743
#define op_count_is_pid_fy 744
#define op_count_is_port_fr 745
#define op_count_is_port_fx 746
#define op_count_is_port_fy 747
#define op_count_is_reference_fr 748
#define op_count_is_reference_fx 749
#define op_count_is_reference_fy 750
#define op_count_is_tuple_fr 751
#define op_count_is_tuple_fx 752
#define op_count_is_tuple_fy 753
#define op_count_is_tuple_of_arity_frA 754
#define op_count_is_tuple_of_arity_fxA 755
#define op_count_is_tuple_of_arity_fyA 756
#define op_count_jump_f 757
#define op_count_label_L 758
#define op_count_loop_rec_end_f 759
#define op_count_move_nr 760
#define op_count_move_nx 761
#define op_count_move_rx 762
#define op_count_move_ry 763
#define op_count_move_xr 764
#define op_count_move_xx 765
#define op_count_move_xy 766
#define op_count_move_yr 767
#define op_count_move_yx 768
#define op_count_move_yy 769
#define op_count_move_cr 770
#define op_count_move_cx 771
#define op_count_move_cy 772
#define op_count_move_sd 773
#define op_count_move2_xyxy 774
#define op_count_move2_yxyx 775
#define op_count_move_call_xrf 776
#define op_count_move_call_yrf 777
#define op_count_move_call_last_xrfP 778
#define op_count_move_call_last_yrfP 779
#define op_count_move_call_only_xrf 780
#define op_count_move_deallocate_return_nrP 781
#define op_count_move_deallocate_return_xrP 782
#define op_count_move_deallocate_return_yrP 783
#define op_count_move_deallocate_return_crP 784
#define op_count_move_return_nr 785
#define op_count_move_return_xr 786
#define op_count_move_return_cr 787
#define op_count_node_r 788
#define op_count_node_x 789
#define op_count_node_y 790
#define op_count_normal_exit 791
#define op_count_on_load 792
#define op_count_put_n 793
#define op_count_put_r 794
#define op_count_put_x 795
#define op_count_put_y 796
#define op_count_put_c 797
#define op_count_put_list_rnx 798
#define op_count_put_list_rxr 799
#define op_count_put_list_rxx 800
#define op_count_put_list_ryx 801
#define op_count_put_list_xnx 802
#define op_count_put_list_xrr 803
#define op_count_put_list_xxr 804
#define op_count_put_list_xxx 805
#define op_count_put_list_xyx 806
#define op_count_put_list_ynx 807
#define op_count_put_list_yrr 808
#define op_count_put_list_yrx 809
#define op_count_put_list_yxx 810
#define op_count_put_list_yyr 811
#define op_count_put_list_yyx 812
#define op_count_put_list_rcr 813
#define op_count_put_list_rcx 814
#define op_count_put_list_rcy 815
#define op_count_put_list_xcr 816
#define op_count_put_list_xcx 817
#define op_count_put_list_xcy 818
#define op_count_put_list_ycr 819
#define op_count_put_list_ycx 820
#define op_count_put_list_ycy 821
#define op_count_put_list_cnr 822
#define op_count_put_list_cnx 823
#define op_count_put_list_crr 824
#define op_count_put_list_crx 825
#define op_count_put_list_cry 826
#define op_count_put_list_cxr 827
#define op_count_put_list_cxx 828
#define op_count_put_list_cxy 829
#define op_count_put_list_cyr 830
#define op_count_put_list_cyx 831
#define op_count_put_list_cyy 832
#define op_count_put_list_ssd 833
#define op_count_raise_ss 834
#define op_count_recv_mark_f 835
#define op_count_remove_message 836
#define op_count_return 837
#define op_count_return_trace 838
#define op_count_self_r 839
#define op_count_self_x 840
#define op_count_self_y 841
#define op_count_send 842
#define op_count_set_tuple_element_sdP 843
#define op_count_system_limit_j 844
#define op_count_test_arity_frA 845
#define op_count_test_arity_fxA 846
#define op_count_test_arity_fyA 847
#define op_count_test_heap_II 848
#define op_count_test_heap_1_put_list_Iy 849
#define op_count_timeout 850
#define op_count_timeout_locked 851
#define op_count_too_old_compiler 852
#define op_count_try_case_end_s 853
#define op_count_try_end_y 854
#define op_count_wait_f 855
#define op_count_wait_locked_f 856
#define op_count_wait_unlocked_f 857

#define DEFINE_OPCODES \
&&lb_allocate_tt, \
&&lb_allocate_heap_III, \
&&lb_allocate_heap_zero_III, \
&&lb_allocate_init_tIy, \
&&lb_allocate_zero_tt, \
&&lb_apply_I, \
&&lb_apply_bif, \
&&lb_apply_last_IP, \
&&lb_badarg_j, \
&&lb_badmatch_s, \
&&lb_bif1_fbsd, \
&&lb_bif1_body_bsd, \
&&lb_bs_context_to_binary_r, \
&&lb_bs_context_to_binary_x, \
&&lb_bs_context_to_binary_y, \
&&lb_bs_init_writable, \
&&lb_bs_put_string_II, \
&&lb_bs_test_tail_imm2_frI, \
&&lb_bs_test_tail_imm2_fxI, \
&&lb_bs_test_unit_frI, \
&&lb_bs_test_unit_fxI, \
&&lb_bs_test_unit8_fr, \
&&lb_bs_test_unit8_fx, \
&&lb_bs_test_zero_tail2_fr, \
&&lb_bs_test_zero_tail2_fx, \
&&lb_call_bif0_e, \
&&lb_call_bif1_e, \
&&lb_call_bif2_e, \
&&lb_call_bif3_e, \
&&lb_call_error_handler, \
&&lb_call_nif, \
&&lb_call_traced_function, \
&&lb_case_end_s, \
&&lb_catch_yf, \
&&lb_catch_end_y, \
&&lb_continue_exit, \
&&lb_deallocate_I, \
&&lb_deallocate_return_P, \
&&lb_error_action_code, \
&&lb_extract_next_element_x, \
&&lb_extract_next_element_y, \
&&lb_extract_next_element2_x, \
&&lb_extract_next_element2_y, \
&&lb_extract_next_element3_x, \
&&lb_extract_next_element3_y, \
&&lb_fclearerror, \
&&lb_fconv_dl, \
&&lb_fmove_ql, \
&&lb_fmove_dl, \
&&lb_fmove_new_ld, \
&&lb_get_list_rrx, \
&&lb_get_list_rry, \
&&lb_get_list_rxr, \
&&lb_get_list_rxx, \
&&lb_get_list_rxy, \
&&lb_get_list_ryr, \
&&lb_get_list_ryx, \
&&lb_get_list_ryy, \
&&lb_get_list_xrx, \
&&lb_get_list_xry, \
&&lb_get_list_xxr, \
&&lb_get_list_xxx, \
&&lb_get_list_xxy, \
&&lb_get_list_xyr, \
&&lb_get_list_xyx, \
&&lb_get_list_xyy, \
&&lb_get_list_yrx, \
&&lb_get_list_yry, \
&&lb_get_list_yxr, \
&&lb_get_list_yxx, \
&&lb_get_list_yxy, \
&&lb_get_list_yyr, \
&&lb_get_list_yyx, \
&&lb_get_list_yyy, \
&&lb_i_apply, \
&&lb_i_apply_fun, \
&&lb_i_apply_fun_last_P, \
&&lb_i_apply_fun_only, \
&&lb_i_apply_last_P, \
&&lb_i_apply_only, \
&&lb_i_band_jId, \
&&lb_i_bif2_fbd, \
&&lb_i_bif2_body_bd, \
&&lb_i_bor_jId, \
&&lb_i_bs_add_jId, \
&&lb_i_bs_append_jIIId, \
&&lb_i_bs_get_binary2_frIsId, \
&&lb_i_bs_get_binary2_fxIsId, \
&&lb_i_bs_get_binary_all2_frIId, \
&&lb_i_bs_get_binary_all2_fxIId, \
&&lb_i_bs_get_binary_all_reuse_rfI, \
&&lb_i_bs_get_binary_all_reuse_xfI, \
&&lb_i_bs_get_binary_imm2_frIIId, \
&&lb_i_bs_get_binary_imm2_fxIIId, \
&&lb_i_bs_get_float2_frIsId, \
&&lb_i_bs_get_float2_fxIsId, \
&&lb_i_bs_get_integer_fIId, \
&&lb_i_bs_get_integer_16_rfd, \
&&lb_i_bs_get_integer_16_xfd, \
&&lb_i_bs_get_integer_32_rfId, \
&&lb_i_bs_get_integer_32_xfId, \
&&lb_i_bs_get_integer_8_rfd, \
&&lb_i_bs_get_integer_8_xfd, \
&&lb_i_bs_get_integer_imm_rIIfId, \
&&lb_i_bs_get_integer_imm_xIIfId, \
&&lb_i_bs_get_integer_small_imm_rIfId, \
&&lb_i_bs_get_integer_small_imm_xIfId, \
&&lb_i_bs_get_utf16_rfId, \
&&lb_i_bs_get_utf16_xfId, \
&&lb_i_bs_get_utf8_rfd, \
&&lb_i_bs_get_utf8_xfd, \
&&lb_i_bs_init_IId, \
&&lb_i_bs_init_bits_IId, \
&&lb_i_bs_init_bits_fail_rjId, \
&&lb_i_bs_init_bits_fail_xjId, \
&&lb_i_bs_init_bits_fail_yjId, \
&&lb_i_bs_init_bits_fail_heap_IjId, \
&&lb_i_bs_init_bits_heap_IIId, \
&&lb_i_bs_init_fail_rjId, \
&&lb_i_bs_init_fail_xjId, \
&&lb_i_bs_init_fail_yjId, \
&&lb_i_bs_init_fail_heap_IjId, \
&&lb_i_bs_init_heap_IIId, \
&&lb_i_bs_init_heap_bin_IId, \
&&lb_i_bs_init_heap_bin_heap_IIId, \
&&lb_i_bs_match_string_rfII, \
&&lb_i_bs_match_string_xfII, \
&&lb_i_bs_private_append_jId, \
&&lb_i_bs_put_utf16_jIs, \
&&lb_i_bs_put_utf8_js, \
&&lb_i_bs_restore2_rI, \
&&lb_i_bs_restore2_xI, \
&&lb_i_bs_save2_rI, \
&&lb_i_bs_save2_xI, \
&&lb_i_bs_skip_bits2_frxI, \
&&lb_i_bs_skip_bits2_fryI, \
&&lb_i_bs_skip_bits2_fxrI, \
&&lb_i_bs_skip_bits2_fxxI, \
&&lb_i_bs_skip_bits2_fxyI, \
&&lb_i_bs_skip_bits_all2_frI, \
&&lb_i_bs_skip_bits_all2_fxI, \
&&lb_i_bs_skip_bits_imm2_frI, \
&&lb_i_bs_skip_bits_imm2_fxI, \
&&lb_i_bs_start_match2_rfIId, \
&&lb_i_bs_start_match2_xfIId, \
&&lb_i_bs_start_match2_yfIId, \
&&lb_i_bs_utf16_size_sd, \
&&lb_i_bs_utf8_size_sd, \
&&lb_i_bs_validate_unicode_js, \
&&lb_i_bs_validate_unicode_retract_j, \
&&lb_i_bsl_jId, \
&&lb_i_bsr_jId, \
&&lb_i_bxor_jId, \
&&lb_i_call_f, \
&&lb_i_call_ext_e, \
&&lb_i_call_ext_last_eP, \
&&lb_i_call_ext_only_e, \
&&lb_i_call_fun_I, \
&&lb_i_call_fun_last_IP, \
&&lb_i_call_last_fP, \
&&lb_i_call_only_f, \
&&lb_i_count_breakpoint, \
&&lb_i_debug_breakpoint, \
&&lb_i_element_jssd, \
&&lb_i_fadd_lll, \
&&lb_i_fast_element_jIsd, \
&&lb_i_fcheckerror, \
&&lb_i_fdiv_lll, \
&&lb_i_fetch_rx, \
&&lb_i_fetch_ry, \
&&lb_i_fetch_xr, \
&&lb_i_fetch_xx, \
&&lb_i_fetch_xy, \
&&lb_i_fetch_yr, \
&&lb_i_fetch_yx, \
&&lb_i_fetch_yy, \
&&lb_i_fetch_rc, \
&&lb_i_fetch_xc, \
&&lb_i_fetch_yc, \
&&lb_i_fetch_cr, \
&&lb_i_fetch_cx, \
&&lb_i_fetch_cy, \
&&lb_i_fetch_cc, \
&&lb_i_fetch_ss, \
&&lb_i_fmul_lll, \
&&lb_i_fnegate_ll, \
&&lb_i_fsub_lll, \
&&lb_i_func_info_IaaI, \
&&lb_i_gc_bif1_jIsId, \
&&lb_i_gc_bif2_jIId, \
&&lb_i_gc_bif3_jIsId, \
&&lb_i_get_sd, \
&&lb_i_get_tuple_element_rPr, \
&&lb_i_get_tuple_element_rPx, \
&&lb_i_get_tuple_element_rPy, \
&&lb_i_get_tuple_element_xPr, \
&&lb_i_get_tuple_element_xPx, \
&&lb_i_get_tuple_element_xPy, \
&&lb_i_get_tuple_element_yPr, \
&&lb_i_get_tuple_element_yPx, \
&&lb_i_get_tuple_element_yPy, \
&&lb_i_global_cons, \
&&lb_i_global_copy, \
&&lb_i_global_tuple, \
&&lb_i_hibernate, \
&&lb_i_int_bnot_jsId, \
&&lb_i_int_div_jId, \
&&lb_i_is_eq_f, \
&&lb_i_is_eq_exact_f, \
&&lb_i_is_eq_immed_frc, \
&&lb_i_is_eq_immed_fxc, \
&&lb_i_is_eq_immed_fyc, \
&&lb_i_is_ge_f, \
&&lb_i_is_lt_f, \
&&lb_i_is_ne_f, \
&&lb_i_is_ne_exact_f, \
&&lb_i_jump_on_val_sfII, \
&&lb_i_jump_on_val_zero_sfI, \
&&lb_i_loop_rec_fr, \
&&lb_i_m_div_jId, \
&&lb_i_make_fun_It, \
&&lb_i_minus_jId, \
&&lb_i_move_call_crf, \
&&lb_i_move_call_ext_cre, \
&&lb_i_move_call_ext_last_ePcr, \
&&lb_i_move_call_ext_only_ecr, \
&&lb_i_move_call_last_fPcr, \
&&lb_i_move_call_only_fcr, \
&&lb_i_mtrace_breakpoint, \
&&lb_i_new_bs_put_binary_jsIs, \
&&lb_i_new_bs_put_binary_all_jsI, \
&&lb_i_new_bs_put_binary_imm_jIs, \
&&lb_i_new_bs_put_float_jsIs, \
&&lb_i_new_bs_put_float_imm_jIIs, \
&&lb_i_new_bs_put_integer_jsIs, \
&&lb_i_new_bs_put_integer_imm_jIIs, \
&&lb_i_plus_jId, \
&&lb_i_put_tuple_Anr, \
&&lb_i_put_tuple_Anx, \
&&lb_i_put_tuple_Arx, \
&&lb_i_put_tuple_Ary, \
&&lb_i_put_tuple_Axr, \
&&lb_i_put_tuple_Axx, \
&&lb_i_put_tuple_Axy, \
&&lb_i_put_tuple_Ayr, \
&&lb_i_put_tuple_Ayx, \
&&lb_i_put_tuple_Ayy, \
&&lb_i_put_tuple_Acr, \
&&lb_i_put_tuple_Acx, \
&&lb_i_put_tuple_Acy, \
&&lb_i_recv_set, \
&&lb_i_rem_jId, \
&&lb_i_return_time_trace, \
&&lb_i_return_to_trace, \
&&lb_i_select_big_sf, \
&&lb_i_select_float_sfI, \
&&lb_i_select_tuple_arity_sfI, \
&&lb_i_select_val_sfI, \
&&lb_i_time_breakpoint, \
&&lb_i_times_jId, \
&&lb_i_trace_breakpoint, \
&&lb_i_trim_I, \
&&lb_i_wait_error, \
&&lb_i_wait_error_locked, \
&&lb_i_wait_timeout_fI, \
&&lb_i_wait_timeout_fs, \
&&lb_i_wait_timeout_locked_fI, \
&&lb_i_wait_timeout_locked_fs, \
&&lb_i_yield, \
&&lb_if_end, \
&&lb_init_y, \
&&lb_init2_yy, \
&&lb_init3_yyy, \
&&lb_int_code_end, \
&&lb_is_atom_fr, \
&&lb_is_atom_fx, \
&&lb_is_atom_fy, \
&&lb_is_binary_fr, \
&&lb_is_binary_fx, \
&&lb_is_binary_fy, \
&&lb_is_bitstring_fr, \
&&lb_is_bitstring_fx, \
&&lb_is_bitstring_fy, \
&&lb_is_boolean_fr, \
&&lb_is_boolean_fx, \
&&lb_is_boolean_fy, \
&&lb_is_float_fr, \
&&lb_is_float_fx, \
&&lb_is_float_fy, \
&&lb_is_function_fr, \
&&lb_is_function_fx, \
&&lb_is_function_fy, \
&&lb_is_function2_fss, \
&&lb_is_integer_fr, \
&&lb_is_integer_fx, \
&&lb_is_integer_fy, \
&&lb_is_integer_allocate_frII, \
&&lb_is_integer_allocate_fxII, \
&&lb_is_list_fr, \
&&lb_is_list_fx, \
&&lb_is_list_fy, \
&&lb_is_nil_fr, \
&&lb_is_nil_fx, \
&&lb_is_nil_fy, \
&&lb_is_non_empty_list_test_heap_frII, \
&&lb_is_nonempty_list_fr, \
&&lb_is_nonempty_list_fx, \
&&lb_is_nonempty_list_fy, \
&&lb_is_nonempty_list_allocate_frII, \
&&lb_is_nonempty_list_allocate_fxII, \
&&lb_is_number_fr, \
&&lb_is_number_fx, \
&&lb_is_number_fy, \
&&lb_is_pid_fr, \
&&lb_is_pid_fx, \
&&lb_is_pid_fy, \
&&lb_is_port_fr, \
&&lb_is_port_fx, \
&&lb_is_port_fy, \
&&lb_is_reference_fr, \
&&lb_is_reference_fx, \
&&lb_is_reference_fy, \
&&lb_is_tuple_fr, \
&&lb_is_tuple_fx, \
&&lb_is_tuple_fy, \
&&lb_is_tuple_of_arity_frA, \
&&lb_is_tuple_of_arity_fxA, \
&&lb_is_tuple_of_arity_fyA, \
&&lb_jump_f, \
&&lb_label_L, \
&&lb_loop_rec_end_f, \
&&lb_move_nr, \
&&lb_move_nx, \
&&lb_move_rx, \
&&lb_move_ry, \
&&lb_move_xr, \
&&lb_move_xx, \
&&lb_move_xy, \
&&lb_move_yr, \
&&lb_move_yx, \
&&lb_move_yy, \
&&lb_move_cr, \
&&lb_move_cx, \
&&lb_move_cy, \
&&lb_move_sd, \
&&lb_move2_xyxy, \
&&lb_move2_yxyx, \
&&lb_move_call_xrf, \
&&lb_move_call_yrf, \
&&lb_move_call_last_xrfP, \
&&lb_move_call_last_yrfP, \
&&lb_move_call_only_xrf, \
&&lb_move_deallocate_return_nrP, \
&&lb_move_deallocate_return_xrP, \
&&lb_move_deallocate_return_yrP, \
&&lb_move_deallocate_return_crP, \
&&lb_move_return_nr, \
&&lb_move_return_xr, \
&&lb_move_return_cr, \
&&lb_node_r, \
&&lb_node_x, \
&&lb_node_y, \
&&lb_normal_exit, \
&&lb_on_load, \
&&lb_put_n, \
&&lb_put_r, \
&&lb_put_x, \
&&lb_put_y, \
&&lb_put_c, \
&&lb_put_list_rnx, \
&&lb_put_list_rxr, \
&&lb_put_list_rxx, \
&&lb_put_list_ryx, \
&&lb_put_list_xnx, \
&&lb_put_list_xrr, \
&&lb_put_list_xxr, \
&&lb_put_list_xxx, \
&&lb_put_list_xyx, \
&&lb_put_list_ynx, \
&&lb_put_list_yrr, \
&&lb_put_list_yrx, \
&&lb_put_list_yxx, \
&&lb_put_list_yyr, \
&&lb_put_list_yyx, \
&&lb_put_list_rcr, \
&&lb_put_list_rcx, \
&&lb_put_list_rcy, \
&&lb_put_list_xcr, \
&&lb_put_list_xcx, \
&&lb_put_list_xcy, \
&&lb_put_list_ycr, \
&&lb_put_list_ycx, \
&&lb_put_list_ycy, \
&&lb_put_list_cnr, \
&&lb_put_list_cnx, \
&&lb_put_list_crr, \
&&lb_put_list_crx, \
&&lb_put_list_cry, \
&&lb_put_list_cxr, \
&&lb_put_list_cxx, \
&&lb_put_list_cxy, \
&&lb_put_list_cyr, \
&&lb_put_list_cyx, \
&&lb_put_list_cyy, \
&&lb_put_list_ssd, \
&&lb_raise_ss, \
&&lb_recv_mark_f, \
&&lb_remove_message, \
&&lb_return, \
&&lb_return_trace, \
&&lb_self_r, \
&&lb_self_x, \
&&lb_self_y, \
&&lb_send, \
&&lb_set_tuple_element_sdP, \
&&lb_system_limit_j, \
&&lb_test_arity_frA, \
&&lb_test_arity_fxA, \
&&lb_test_arity_fyA, \
&&lb_test_heap_II, \
&&lb_test_heap_1_put_list_Iy, \
&&lb_timeout, \
&&lb_timeout_locked, \
&&lb_too_old_compiler, \
&&lb_try_case_end_s, \
&&lb_try_end_y, \
&&lb_wait_f, \
&&lb_wait_locked_f, \
&&lb_wait_unlocked_f,

#define DEFINE_COUNTING_OPCODES \
&&lb_count_allocate_tt, \
&&lb_count_allocate_heap_III, \
&&lb_count_allocate_heap_zero_III, \
&&lb_count_allocate_init_tIy, \
&&lb_count_allocate_zero_tt, \
&&lb_count_apply_I, \
&&lb_count_apply_bif, \
&&lb_count_apply_last_IP, \
&&lb_count_badarg_j, \
&&lb_count_badmatch_s, \
&&lb_count_bif1_fbsd, \
&&lb_count_bif1_body_bsd, \
&&lb_count_bs_context_to_binary_r, \
&&lb_count_bs_context_to_binary_x, \
&&lb_count_bs_context_to_binary_y, \
&&lb_count_bs_init_writable, \
&&lb_count_bs_put_string_II, \
&&lb_count_bs_test_tail_imm2_frI, \
&&lb_count_bs_test_tail_imm2_fxI, \
&&lb_count_bs_test_unit_frI, \
&&lb_count_bs_test_unit_fxI, \
&&lb_count_bs_test_unit8_fr, \
&&lb_count_bs_test_unit8_fx, \
&&lb_count_bs_test_zero_tail2_fr, \
&&lb_count_bs_test_zero_tail2_fx, \
&&lb_count_call_bif0_e, \
&&lb_count_call_bif1_e, \
&&lb_count_call_bif2_e, \
&&lb_count_call_bif3_e, \
&&lb_count_call_error_handler, \
&&lb_count_call_nif, \
&&lb_count_call_traced_function, \
&&lb_count_case_end_s, \
&&lb_count_catch_yf, \
&&lb_count_catch_end_y, \
&&lb_count_continue_exit, \
&&lb_count_deallocate_I, \
&&lb_count_deallocate_return_P, \
&&lb_count_error_action_code, \
&&lb_count_extract_next_element_x, \
&&lb_count_extract_next_element_y, \
&&lb_count_extract_next_element2_x, \
&&lb_count_extract_next_element2_y, \
&&lb_count_extract_next_element3_x, \
&&lb_count_extract_next_element3_y, \
&&lb_count_fclearerror, \
&&lb_count_fconv_dl, \
&&lb_count_fmove_ql, \
&&lb_count_fmove_dl, \
&&lb_count_fmove_new_ld, \
&&lb_count_get_list_rrx, \
&&lb_count_get_list_rry, \
&&lb_count_get_list_rxr, \
&&lb_count_get_list_rxx, \
&&lb_count_get_list_rxy, \
&&lb_count_get_list_ryr, \
&&lb_count_get_list_ryx, \
&&lb_count_get_list_ryy, \
&&lb_count_get_list_xrx, \
&&lb_count_get_list_xry, \
&&lb_count_get_list_xxr, \
&&lb_count_get_list_xxx, \
&&lb_count_get_list_xxy, \
&&lb_count_get_list_xyr, \
&&lb_count_get_list_xyx, \
&&lb_count_get_list_xyy, \
&&lb_count_get_list_yrx, \
&&lb_count_get_list_yry, \
&&lb_count_get_list_yxr, \
&&lb_count_get_list_yxx, \
&&lb_count_get_list_yxy, \
&&lb_count_get_list_yyr, \
&&lb_count_get_list_yyx, \
&&lb_count_get_list_yyy, \
&&lb_count_i_apply, \
&&lb_count_i_apply_fun, \
&&lb_count_i_apply_fun_last_P, \
&&lb_count_i_apply_fun_only, \
&&lb_count_i_apply_last_P, \
&&lb_count_i_apply_only, \
&&lb_count_i_band_jId, \
&&lb_count_i_bif2_fbd, \
&&lb_count_i_bif2_body_bd, \
&&lb_count_i_bor_jId, \
&&lb_count_i_bs_add_jId, \
&&lb_count_i_bs_append_jIIId, \
&&lb_count_i_bs_get_binary2_frIsId, \
&&lb_count_i_bs_get_binary2_fxIsId, \
&&lb_count_i_bs_get_binary_all2_frIId, \
&&lb_count_i_bs_get_binary_all2_fxIId, \
&&lb_count_i_bs_get_binary_all_reuse_rfI, \
&&lb_count_i_bs_get_binary_all_reuse_xfI, \
&&lb_count_i_bs_get_binary_imm2_frIIId, \
&&lb_count_i_bs_get_binary_imm2_fxIIId, \
&&lb_count_i_bs_get_float2_frIsId, \
&&lb_count_i_bs_get_float2_fxIsId, \
&&lb_count_i_bs_get_integer_fIId, \
&&lb_count_i_bs_get_integer_16_rfd, \
&&lb_count_i_bs_get_integer_16_xfd, \
&&lb_count_i_bs_get_integer_32_rfId, \
&&lb_count_i_bs_get_integer_32_xfId, \
&&lb_count_i_bs_get_integer_8_rfd, \
&&lb_count_i_bs_get_integer_8_xfd, \
&&lb_count_i_bs_get_integer_imm_rIIfId, \
&&lb_count_i_bs_get_integer_imm_xIIfId, \
&&lb_count_i_bs_get_integer_small_imm_rIfId, \
&&lb_count_i_bs_get_integer_small_imm_xIfId, \
&&lb_count_i_bs_get_utf16_rfId, \
&&lb_count_i_bs_get_utf16_xfId, \
&&lb_count_i_bs_get_utf8_rfd, \
&&lb_count_i_bs_get_utf8_xfd, \
&&lb_count_i_bs_init_IId, \
&&lb_count_i_bs_init_bits_IId, \
&&lb_count_i_bs_init_bits_fail_rjId, \
&&lb_count_i_bs_init_bits_fail_xjId, \
&&lb_count_i_bs_init_bits_fail_yjId, \
&&lb_count_i_bs_init_bits_fail_heap_IjId, \
&&lb_count_i_bs_init_bits_heap_IIId, \
&&lb_count_i_bs_init_fail_rjId, \
&&lb_count_i_bs_init_fail_xjId, \
&&lb_count_i_bs_init_fail_yjId, \
&&lb_count_i_bs_init_fail_heap_IjId, \
&&lb_count_i_bs_init_heap_IIId, \
&&lb_count_i_bs_init_heap_bin_IId, \
&&lb_count_i_bs_init_heap_bin_heap_IIId, \
&&lb_count_i_bs_match_string_rfII, \
&&lb_count_i_bs_match_string_xfII, \
&&lb_count_i_bs_private_append_jId, \
&&lb_count_i_bs_put_utf16_jIs, \
&&lb_count_i_bs_put_utf8_js, \
&&lb_count_i_bs_restore2_rI, \
&&lb_count_i_bs_restore2_xI, \
&&lb_count_i_bs_save2_rI, \
&&lb_count_i_bs_save2_xI, \
&&lb_count_i_bs_skip_bits2_frxI, \
&&lb_count_i_bs_skip_bits2_fryI, \
&&lb_count_i_bs_skip_bits2_fxrI, \
&&lb_count_i_bs_skip_bits2_fxxI, \
&&lb_count_i_bs_skip_bits2_fxyI, \
&&lb_count_i_bs_skip_bits_all2_frI, \
&&lb_count_i_bs_skip_bits_all2_fxI, \
&&lb_count_i_bs_skip_bits_imm2_frI, \
&&lb_count_i_bs_skip_bits_imm2_fxI, \
&&lb_count_i_bs_start_match2_rfIId, \
&&lb_count_i_bs_start_match2_xfIId, \
&&lb_count_i_bs_start_match2_yfIId, \
&&lb_count_i_bs_utf16_size_sd, \
&&lb_count_i_bs_utf8_size_sd, \
&&lb_count_i_bs_validate_unicode_js, \
&&lb_count_i_bs_validate_unicode_retract_j, \
&&lb_count_i_bsl_jId, \
&&lb_count_i_bsr_jId, \
&&lb_count_i_bxor_jId, \
&&lb_count_i_call_f, \
&&lb_count_i_call_ext_e, \
&&lb_count_i_call_ext_last_eP, \
&&lb_count_i_call_ext_only_e, \
&&lb_count_i_call_fun_I, \
&&lb_count_i_call_fun_last_IP, \
&&lb_count_i_call_last_fP, \
&&lb_count_i_call_only_f, \
&&lb_count_i_count_breakpoint, \
&&lb_count_i_debug_breakpoint, \
&&lb_count_i_element_jssd, \
&&lb_count_i_fadd_lll, \
&&lb_count_i_fast_element_jIsd, \
&&lb_count_i_fcheckerror, \
&&lb_count_i_fdiv_lll, \
&&lb_count_i_fetch_rx, \
&&lb_count_i_fetch_ry, \
&&lb_count_i_fetch_xr, \
&&lb_count_i_fetch_xx, \
&&lb_count_i_fetch_xy, \
&&lb_count_i_fetch_yr, \
&&lb_count_i_fetch_yx, \
&&lb_count_i_fetch_yy, \
&&lb_count_i_fetch_rc, \
&&lb_count_i_fetch_xc, \
&&lb_count_i_fetch_yc, \
&&lb_count_i_fetch_cr, \
&&lb_count_i_fetch_cx, \
&&lb_count_i_fetch_cy, \
&&lb_count_i_fetch_cc, \
&&lb_count_i_fetch_ss, \
&&lb_count_i_fmul_lll, \
&&lb_count_i_fnegate_ll, \
&&lb_count_i_fsub_lll, \
&&lb_count_i_func_info_IaaI, \
&&lb_count_i_gc_bif1_jIsId, \
&&lb_count_i_gc_bif2_jIId, \
&&lb_count_i_gc_bif3_jIsId, \
&&lb_count_i_get_sd, \
&&lb_count_i_get_tuple_element_rPr, \
&&lb_count_i_get_tuple_element_rPx, \
&&lb_count_i_get_tuple_element_rPy, \
&&lb_count_i_get_tuple_element_xPr, \
&&lb_count_i_get_tuple_element_xPx, \
&&lb_count_i_get_tuple_element_xPy, \
&&lb_count_i_get_tuple_element_yPr, \
&&lb_count_i_get_tuple_element_yPx, \
&&lb_count_i_get_tuple_element_yPy, \
&&lb_count_i_global_cons, \
&&lb_count_i_global_copy, \
&&lb_count_i_global_tuple, \
&&lb_count_i_hibernate, \
&&lb_count_i_int_bnot_jsId, \
&&lb_count_i_int_div_jId, \
&&lb_count_i_is_eq_f, \
&&lb_count_i_is_eq_exact_f, \
&&lb_count_i_is_eq_immed_frc, \
&&lb_count_i_is_eq_immed_fxc, \
&&lb_count_i_is_eq_immed_fyc, \
&&lb_count_i_is_ge_f, \
&&lb_count_i_is_lt_f, \
&&lb_count_i_is_ne_f, \
&&lb_count_i_is_ne_exact_f, \
&&lb_count_i_jump_on_val_sfII, \
&&lb_count_i_jump_on_val_zero_sfI, \
&&lb_count_i_loop_rec_fr, \
&&lb_count_i_m_div_jId, \
&&lb_count_i_make_fun_It, \
&&lb_count_i_minus_jId, \
&&lb_count_i_move_call_crf, \
&&lb_count_i_move_call_ext_cre, \
&&lb_count_i_move_call_ext_last_ePcr, \
&&lb_count_i_move_call_ext_only_ecr, \
&&lb_count_i_move_call_last_fPcr, \
&&lb_count_i_move_call_only_fcr, \
&&lb_count_i_mtrace_breakpoint, \
&&lb_count_i_new_bs_put_binary_jsIs, \
&&lb_count_i_new_bs_put_binary_all_jsI, \
&&lb_count_i_new_bs_put_binary_imm_jIs, \
&&lb_count_i_new_bs_put_float_jsIs, \
&&lb_count_i_new_bs_put_float_imm_jIIs, \
&&lb_count_i_new_bs_put_integer_jsIs, \
&&lb_count_i_new_bs_put_integer_imm_jIIs, \
&&lb_count_i_plus_jId, \
&&lb_count_i_put_tuple_Anr, \
&&lb_count_i_put_tuple_Anx, \
&&lb_count_i_put_tuple_Arx, \
&&lb_count_i_put_tuple_Ary, \
&&lb_count_i_put_tuple_Axr, \
&&lb_count_i_put_tuple_Axx, \
&&lb_count_i_put_tuple_Axy, \
&&lb_count_i_put_tuple_Ayr, \
&&lb_count_i_put_tuple_Ayx, \
&&lb_count_i_put_tuple_Ayy, \
&&lb_count_i_put_tuple_Acr, \
&&lb_count_i_put_tuple_Acx, \
&&lb_count_i_put_tuple_Acy, \
&&lb_count_i_recv_set, \
&&lb_count_i_rem_jId, \
&&lb_count_i_return_time_trace, \
&&lb_count_i_return_to_trace, \
&&lb_count_i_select_big_sf, \
&&lb_count_i_select_float_sfI, \
&&lb_count_i_select_tuple_arity_sfI, \
&&lb_count_i_select_val_sfI, \
&&lb_count_i_time_breakpoint, \
&&lb_count_i_times_jId, \
&&lb_count_i_trace_breakpoint, \
&&lb_count_i_trim_I, \
&&lb_count_i_wait_error, \
&&lb_count_i_wait_error_locked, \
&&lb_count_i_wait_timeout_fI, \
&&lb_count_i_wait_timeout_fs, \
&&lb_count_i_wait_timeout_locked_fI, \
&&lb_count_i_wait_timeout_locked_fs, \
&&lb_count_i_yield, \
&&lb_count_if_end, \
&&lb_count_init_y, \
&&lb_count_init2_yy, \
&&lb_count_init3_yyy, \
&&lb_count_int_code_end, \
&&lb_count_is_atom_fr, \
&&lb_count_is_atom_fx, \
&&lb_count_is_atom_fy, \
&&lb_count_is_binary_fr, \
&&lb_count_is_binary_fx, \
&&lb_count_is_binary_fy, \
&&lb_count_is_bitstring_fr, \
&&lb_count_is_bitstring_fx, \
&&lb_count_is_bitstring_fy, \
&&lb_count_is_boolean_fr, \
&&lb_count_is_boolean_fx, \
&&lb_count_is_boolean_fy, \
&&lb_count_is_float_fr, \
&&lb_count_is_float_fx, \
&&lb_count_is_float_fy, \
&&lb_count_is_function_fr, \
&&lb_count_is_function_fx, \
&&lb_count_is_function_fy, \
&&lb_count_is_function2_fss, \
&&lb_count_is_integer_fr, \
&&lb_count_is_integer_fx, \
&&lb_count_is_integer_fy, \
&&lb_count_is_integer_allocate_frII, \
&&lb_count_is_integer_allocate_fxII, \
&&lb_count_is_list_fr, \
&&lb_count_is_list_fx, \
&&lb_count_is_list_fy, \
&&lb_count_is_nil_fr, \
&&lb_count_is_nil_fx, \
&&lb_count_is_nil_fy, \
&&lb_count_is_non_empty_list_test_heap_frII, \
&&lb_count_is_nonempty_list_fr, \
&&lb_count_is_nonempty_list_fx, \
&&lb_count_is_nonempty_list_fy, \
&&lb_count_is_nonempty_list_allocate_frII, \
&&lb_count_is_nonempty_list_allocate_fxII, \
&&lb_count_is_number_fr, \
&&lb_count_is_number_fx, \
&&lb_count_is_number_fy, \
&&lb_count_is_pid_fr, \
&&lb_count_is_pid_fx, \
&&lb_count_is_pid_fy, \
&&lb_count_is_port_fr, \
&&lb_count_is_port_fx, \
&&lb_count_is_port_fy, \
&&lb_count_is_reference_fr, \
&&lb_count_is_reference_fx, \
&&lb_count_is_reference_fy, \
&&lb_count_is_tuple_fr, \
&&lb_count_is_tuple_fx, \
&&lb_count_is_tuple_fy, \
&&lb_count_is_tuple_of_arity_frA, \
&&lb_count_is_tuple_of_arity_fxA, \
&&lb_count_is_tuple_of_arity_fyA, \
&&lb_count_jump_f, \
&&lb_count_label_L, \
&&lb_count_loop_rec_end_f, \
&&lb_count_move_nr, \
&&lb_count_move_nx, \
&&lb_count_move_rx, \
&&lb_count_move_ry, \
&&lb_count_move_xr, \
&&lb_count_move_xx, \
&&lb_count_move_xy, \
&&lb_count_move_yr, \
&&lb_count_move_yx, \
&&lb_count_move_yy, \
&&lb_count_move_cr, \
&&lb_count_move_cx, \
&&lb_count_move_cy, \
&&lb_count_move_sd, \
&&lb_count_move2_xyxy, \
&&lb_count_move2_yxyx, \
&&lb_count_move_call_xrf, \
&&lb_count_move_call_yrf, \
&&lb_count_move_call_last_xrfP, \
&&lb_count_move_call_last_yrfP, \
&&lb_count_move_call_only_xrf, \
&&lb_count_move_deallocate_return_nrP, \
&&lb_count_move_deallocate_return_xrP, \
&&lb_count_move_deallocate_return_yrP, \
&&lb_count_move_deallocate_return_crP, \
&&lb_count_move_return_nr, \
&&lb_count_move_return_xr, \
&&lb_count_move_return_cr, \
&&lb_count_node_r, \
&&lb_count_node_x, \
&&lb_count_node_y, \
&&lb_count_normal_exit, \
&&lb_count_on_load, \
&&lb_count_put_n, \
&&lb_count_put_r, \
&&lb_count_put_x, \
&&lb_count_put_y, \
&&lb_count_put_c, \
&&lb_count_put_list_rnx, \
&&lb_count_put_list_rxr, \
&&lb_count_put_list_rxx, \
&&lb_count_put_list_ryx, \
&&lb_count_put_list_xnx, \
&&lb_count_put_list_xrr, \
&&lb_count_put_list_xxr, \
&&lb_count_put_list_xxx, \
&&lb_count_put_list_xyx, \
&&lb_count_put_list_ynx, \
&&lb_count_put_list_yrr, \
&&lb_count_put_list_yrx, \
&&lb_count_put_list_yxx, \
&&lb_count_put_list_yyr, \
&&lb_count_put_list_yyx, \
&&lb_count_put_list_rcr, \
&&lb_count_put_list_rcx, \
&&lb_count_put_list_rcy, \
&&lb_count_put_list_xcr, \
&&lb_count_put_list_xcx, \
&&lb_count_put_list_xcy, \
&&lb_count_put_list_ycr, \
&&lb_count_put_list_ycx, \
&&lb_count_put_list_ycy, \
&&lb_count_put_list_cnr, \
&&lb_count_put_list_cnx, \
&&lb_count_put_list_crr, \
&&lb_count_put_list_crx, \
&&lb_count_put_list_cry, \
&&lb_count_put_list_cxr, \
&&lb_count_put_list_cxx, \
&&lb_count_put_list_cxy, \
&&lb_count_put_list_cyr, \
&&lb_count_put_list_cyx, \
&&lb_count_put_list_cyy, \
&&lb_count_put_list_ssd, \
&&lb_count_raise_ss, \
&&lb_count_recv_mark_f, \
&&lb_count_remove_message, \
&&lb_count_return, \
&&lb_count_return_trace, \
&&lb_count_self_r, \
&&lb_count_self_x, \
&&lb_count_self_y, \
&&lb_count_send, \
&&lb_count_set_tuple_element_sdP, \
&&lb_count_system_limit_j, \
&&lb_count_test_arity_frA, \
&&lb_count_test_arity_fxA, \
&&lb_count_test_arity_fyA, \
&&lb_count_test_heap_II, \
&&lb_count_test_heap_1_put_list_Iy, \
&&lb_count_timeout, \
&&lb_count_timeout_locked, \
&&lb_count_too_old_compiler, \
&&lb_count_try_case_end_s, \
&&lb_count_try_end_y, \
&&lb_count_wait_f, \
&&lb_count_wait_locked_f, \
&&lb_count_wait_unlocked_f,

#define DEFINE_COUNTING_LABELS \
CountCase(allocate_tt): opc[0].count++; goto lb_allocate_tt; \
CountCase(allocate_heap_III): opc[1].count++; goto lb_allocate_heap_III; \
CountCase(allocate_heap_zero_III): opc[2].count++; goto lb_allocate_heap_zero_III; \
CountCase(allocate_init_tIy): opc[3].count++; goto lb_allocate_init_tIy; \
CountCase(allocate_zero_tt): opc[4].count++; goto lb_allocate_zero_tt; \
CountCase(apply_I): opc[5].count++; goto lb_apply_I; \
CountCase(apply_bif): opc[6].count++; goto lb_apply_bif; \
CountCase(apply_last_IP): opc[7].count++; goto lb_apply_last_IP; \
CountCase(badarg_j): opc[8].count++; goto lb_badarg_j; \
CountCase(badmatch_s): opc[9].count++; goto lb_badmatch_s; \
CountCase(bif1_fbsd): opc[10].count++; goto lb_bif1_fbsd; \
CountCase(bif1_body_bsd): opc[11].count++; goto lb_bif1_body_bsd; \
CountCase(bs_context_to_binary_r): opc[12].count++; goto lb_bs_context_to_binary_r; \
CountCase(bs_context_to_binary_x): opc[13].count++; goto lb_bs_context_to_binary_x; \
CountCase(bs_context_to_binary_y): opc[14].count++; goto lb_bs_context_to_binary_y; \
CountCase(bs_init_writable): opc[15].count++; goto lb_bs_init_writable; \
CountCase(bs_put_string_II): opc[16].count++; goto lb_bs_put_string_II; \
CountCase(bs_test_tail_imm2_frI): opc[17].count++; goto lb_bs_test_tail_imm2_frI; \
CountCase(bs_test_tail_imm2_fxI): opc[18].count++; goto lb_bs_test_tail_imm2_fxI; \
CountCase(bs_test_unit_frI): opc[19].count++; goto lb_bs_test_unit_frI; \
CountCase(bs_test_unit_fxI): opc[20].count++; goto lb_bs_test_unit_fxI; \
CountCase(bs_test_unit8_fr): opc[21].count++; goto lb_bs_test_unit8_fr; \
CountCase(bs_test_unit8_fx): opc[22].count++; goto lb_bs_test_unit8_fx; \
CountCase(bs_test_zero_tail2_fr): opc[23].count++; goto lb_bs_test_zero_tail2_fr; \
CountCase(bs_test_zero_tail2_fx): opc[24].count++; goto lb_bs_test_zero_tail2_fx; \
CountCase(call_bif0_e): opc[25].count++; goto lb_call_bif0_e; \
CountCase(call_bif1_e): opc[26].count++; goto lb_call_bif1_e; \
CountCase(call_bif2_e): opc[27].count++; goto lb_call_bif2_e; \
CountCase(call_bif3_e): opc[28].count++; goto lb_call_bif3_e; \
CountCase(call_error_handler): opc[29].count++; goto lb_call_error_handler; \
CountCase(call_nif): opc[30].count++; goto lb_call_nif; \
CountCase(call_traced_function): opc[31].count++; goto lb_call_traced_function; \
CountCase(case_end_s): opc[32].count++; goto lb_case_end_s; \
CountCase(catch_yf): opc[33].count++; goto lb_catch_yf; \
CountCase(catch_end_y): opc[34].count++; goto lb_catch_end_y; \
CountCase(continue_exit): opc[35].count++; goto lb_continue_exit; \
CountCase(deallocate_I): opc[36].count++; goto lb_deallocate_I; \
CountCase(deallocate_return_P): opc[37].count++; goto lb_deallocate_return_P; \
CountCase(error_action_code): opc[38].count++; goto lb_error_action_code; \
CountCase(extract_next_element_x): opc[39].count++; goto lb_extract_next_element_x; \
CountCase(extract_next_element_y): opc[40].count++; goto lb_extract_next_element_y; \
CountCase(extract_next_element2_x): opc[41].count++; goto lb_extract_next_element2_x; \
CountCase(extract_next_element2_y): opc[42].count++; goto lb_extract_next_element2_y; \
CountCase(extract_next_element3_x): opc[43].count++; goto lb_extract_next_element3_x; \
CountCase(extract_next_element3_y): opc[44].count++; goto lb_extract_next_element3_y; \
CountCase(fclearerror): opc[45].count++; goto lb_fclearerror; \
CountCase(fconv_dl): opc[46].count++; goto lb_fconv_dl; \
CountCase(fmove_ql): opc[47].count++; goto lb_fmove_ql; \
CountCase(fmove_dl): opc[48].count++; goto lb_fmove_dl; \
CountCase(fmove_new_ld): opc[49].count++; goto lb_fmove_new_ld; \
CountCase(get_list_rrx): opc[50].count++; goto lb_get_list_rrx; \
CountCase(get_list_rry): opc[51].count++; goto lb_get_list_rry; \
CountCase(get_list_rxr): opc[52].count++; goto lb_get_list_rxr; \
CountCase(get_list_rxx): opc[53].count++; goto lb_get_list_rxx; \
CountCase(get_list_rxy): opc[54].count++; goto lb_get_list_rxy; \
CountCase(get_list_ryr): opc[55].count++; goto lb_get_list_ryr; \
CountCase(get_list_ryx): opc[56].count++; goto lb_get_list_ryx; \
CountCase(get_list_ryy): opc[57].count++; goto lb_get_list_ryy; \
CountCase(get_list_xrx): opc[58].count++; goto lb_get_list_xrx; \
CountCase(get_list_xry): opc[59].count++; goto lb_get_list_xry; \
CountCase(get_list_xxr): opc[60].count++; goto lb_get_list_xxr; \
CountCase(get_list_xxx): opc[61].count++; goto lb_get_list_xxx; \
CountCase(get_list_xxy): opc[62].count++; goto lb_get_list_xxy; \
CountCase(get_list_xyr): opc[63].count++; goto lb_get_list_xyr; \
CountCase(get_list_xyx): opc[64].count++; goto lb_get_list_xyx; \
CountCase(get_list_xyy): opc[65].count++; goto lb_get_list_xyy; \
CountCase(get_list_yrx): opc[66].count++; goto lb_get_list_yrx; \
CountCase(get_list_yry): opc[67].count++; goto lb_get_list_yry; \
CountCase(get_list_yxr): opc[68].count++; goto lb_get_list_yxr; \
CountCase(get_list_yxx): opc[69].count++; goto lb_get_list_yxx; \
CountCase(get_list_yxy): opc[70].count++; goto lb_get_list_yxy; \
CountCase(get_list_yyr): opc[71].count++; goto lb_get_list_yyr; \
CountCase(get_list_yyx): opc[72].count++; goto lb_get_list_yyx; \
CountCase(get_list_yyy): opc[73].count++; goto lb_get_list_yyy; \
CountCase(i_apply): opc[74].count++; goto lb_i_apply; \
CountCase(i_apply_fun): opc[75].count++; goto lb_i_apply_fun; \
CountCase(i_apply_fun_last_P): opc[76].count++; goto lb_i_apply_fun_last_P; \
CountCase(i_apply_fun_only): opc[77].count++; goto lb_i_apply_fun_only; \
CountCase(i_apply_last_P): opc[78].count++; goto lb_i_apply_last_P; \
CountCase(i_apply_only): opc[79].count++; goto lb_i_apply_only; \
CountCase(i_band_jId): opc[80].count++; goto lb_i_band_jId; \
CountCase(i_bif2_fbd): opc[81].count++; goto lb_i_bif2_fbd; \
CountCase(i_bif2_body_bd): opc[82].count++; goto lb_i_bif2_body_bd; \
CountCase(i_bor_jId): opc[83].count++; goto lb_i_bor_jId; \
CountCase(i_bs_add_jId): opc[84].count++; goto lb_i_bs_add_jId; \
CountCase(i_bs_append_jIIId): opc[85].count++; goto lb_i_bs_append_jIIId; \
CountCase(i_bs_get_binary2_frIsId): opc[86].count++; goto lb_i_bs_get_binary2_frIsId; \
CountCase(i_bs_get_binary2_fxIsId): opc[87].count++; goto lb_i_bs_get_binary2_fxIsId; \
CountCase(i_bs_get_binary_all2_frIId): opc[88].count++; goto lb_i_bs_get_binary_all2_frIId; \
CountCase(i_bs_get_binary_all2_fxIId): opc[89].count++; goto lb_i_bs_get_binary_all2_fxIId; \
CountCase(i_bs_get_binary_all_reuse_rfI): opc[90].count++; goto lb_i_bs_get_binary_all_reuse_rfI; \
CountCase(i_bs_get_binary_all_reuse_xfI): opc[91].count++; goto lb_i_bs_get_binary_all_reuse_xfI; \
CountCase(i_bs_get_binary_imm2_frIIId): opc[92].count++; goto lb_i_bs_get_binary_imm2_frIIId; \
CountCase(i_bs_get_binary_imm2_fxIIId): opc[93].count++; goto lb_i_bs_get_binary_imm2_fxIIId; \
CountCase(i_bs_get_float2_frIsId): opc[94].count++; goto lb_i_bs_get_float2_frIsId; \
CountCase(i_bs_get_float2_fxIsId): opc[95].count++; goto lb_i_bs_get_float2_fxIsId; \
CountCase(i_bs_get_integer_fIId): opc[96].count++; goto lb_i_bs_get_integer_fIId; \
CountCase(i_bs_get_integer_16_rfd): opc[97].count++; goto lb_i_bs_get_integer_16_rfd; \
CountCase(i_bs_get_integer_16_xfd): opc[98].count++; goto lb_i_bs_get_integer_16_xfd; \
CountCase(i_bs_get_integer_32_rfId): opc[99].count++; goto lb_i_bs_get_integer_32_rfId; \
CountCase(i_bs_get_integer_32_xfId): opc[100].count++; goto lb_i_bs_get_integer_32_xfId; \
CountCase(i_bs_get_integer_8_rfd): opc[101].count++; goto lb_i_bs_get_integer_8_rfd; \
CountCase(i_bs_get_integer_8_xfd): opc[102].count++; goto lb_i_bs_get_integer_8_xfd; \
CountCase(i_bs_get_integer_imm_rIIfId): opc[103].count++; goto lb_i_bs_get_integer_imm_rIIfId; \
CountCase(i_bs_get_integer_imm_xIIfId): opc[104].count++; goto lb_i_bs_get_integer_imm_xIIfId; \
CountCase(i_bs_get_integer_small_imm_rIfId): opc[105].count++; goto lb_i_bs_get_integer_small_imm_rIfId; \
CountCase(i_bs_get_integer_small_imm_xIfId): opc[106].count++; goto lb_i_bs_get_integer_small_imm_xIfId; \
CountCase(i_bs_get_utf16_rfId): opc[107].count++; goto lb_i_bs_get_utf16_rfId; \
CountCase(i_bs_get_utf16_xfId): opc[108].count++; goto lb_i_bs_get_utf16_xfId; \
CountCase(i_bs_get_utf8_rfd): opc[109].count++; goto lb_i_bs_get_utf8_rfd; \
CountCase(i_bs_get_utf8_xfd): opc[110].count++; goto lb_i_bs_get_utf8_xfd; \
CountCase(i_bs_init_IId): opc[111].count++; goto lb_i_bs_init_IId; \
CountCase(i_bs_init_bits_IId): opc[112].count++; goto lb_i_bs_init_bits_IId; \
CountCase(i_bs_init_bits_fail_rjId): opc[113].count++; goto lb_i_bs_init_bits_fail_rjId; \
CountCase(i_bs_init_bits_fail_xjId): opc[114].count++; goto lb_i_bs_init_bits_fail_xjId; \
CountCase(i_bs_init_bits_fail_yjId): opc[115].count++; goto lb_i_bs_init_bits_fail_yjId; \
CountCase(i_bs_init_bits_fail_heap_IjId): opc[116].count++; goto lb_i_bs_init_bits_fail_heap_IjId; \
CountCase(i_bs_init_bits_heap_IIId): opc[117].count++; goto lb_i_bs_init_bits_heap_IIId; \
CountCase(i_bs_init_fail_rjId): opc[118].count++; goto lb_i_bs_init_fail_rjId; \
CountCase(i_bs_init_fail_xjId): opc[119].count++; goto lb_i_bs_init_fail_xjId; \
CountCase(i_bs_init_fail_yjId): opc[120].count++; goto lb_i_bs_init_fail_yjId; \
CountCase(i_bs_init_fail_heap_IjId): opc[121].count++; goto lb_i_bs_init_fail_heap_IjId; \
CountCase(i_bs_init_heap_IIId): opc[122].count++; goto lb_i_bs_init_heap_IIId; \
CountCase(i_bs_init_heap_bin_IId): opc[123].count++; goto lb_i_bs_init_heap_bin_IId; \
CountCase(i_bs_init_heap_bin_heap_IIId): opc[124].count++; goto lb_i_bs_init_heap_bin_heap_IIId; \
CountCase(i_bs_match_string_rfII): opc[125].count++; goto lb_i_bs_match_string_rfII; \
CountCase(i_bs_match_string_xfII): opc[126].count++; goto lb_i_bs_match_string_xfII; \
CountCase(i_bs_private_append_jId): opc[127].count++; goto lb_i_bs_private_append_jId; \
CountCase(i_bs_put_utf16_jIs): opc[128].count++; goto lb_i_bs_put_utf16_jIs; \
CountCase(i_bs_put_utf8_js): opc[129].count++; goto lb_i_bs_put_utf8_js; \
CountCase(i_bs_restore2_rI): opc[130].count++; goto lb_i_bs_restore2_rI; \
CountCase(i_bs_restore2_xI): opc[131].count++; goto lb_i_bs_restore2_xI; \
CountCase(i_bs_save2_rI): opc[132].count++; goto lb_i_bs_save2_rI; \
CountCase(i_bs_save2_xI): opc[133].count++; goto lb_i_bs_save2_xI; \
CountCase(i_bs_skip_bits2_frxI): opc[134].count++; goto lb_i_bs_skip_bits2_frxI; \
CountCase(i_bs_skip_bits2_fryI): opc[135].count++; goto lb_i_bs_skip_bits2_fryI; \
CountCase(i_bs_skip_bits2_fxrI): opc[136].count++; goto lb_i_bs_skip_bits2_fxrI; \
CountCase(i_bs_skip_bits2_fxxI): opc[137].count++; goto lb_i_bs_skip_bits2_fxxI; \
CountCase(i_bs_skip_bits2_fxyI): opc[138].count++; goto lb_i_bs_skip_bits2_fxyI; \
CountCase(i_bs_skip_bits_all2_frI): opc[139].count++; goto lb_i_bs_skip_bits_all2_frI; \
CountCase(i_bs_skip_bits_all2_fxI): opc[140].count++; goto lb_i_bs_skip_bits_all2_fxI; \
CountCase(i_bs_skip_bits_imm2_frI): opc[141].count++; goto lb_i_bs_skip_bits_imm2_frI; \
CountCase(i_bs_skip_bits_imm2_fxI): opc[142].count++; goto lb_i_bs_skip_bits_imm2_fxI; \
CountCase(i_bs_start_match2_rfIId): opc[143].count++; goto lb_i_bs_start_match2_rfIId; \
CountCase(i_bs_start_match2_xfIId): opc[144].count++; goto lb_i_bs_start_match2_xfIId; \
CountCase(i_bs_start_match2_yfIId): opc[145].count++; goto lb_i_bs_start_match2_yfIId; \
CountCase(i_bs_utf16_size_sd): opc[146].count++; goto lb_i_bs_utf16_size_sd; \
CountCase(i_bs_utf8_size_sd): opc[147].count++; goto lb_i_bs_utf8_size_sd; \
CountCase(i_bs_validate_unicode_js): opc[148].count++; goto lb_i_bs_validate_unicode_js; \
CountCase(i_bs_validate_unicode_retract_j): opc[149].count++; goto lb_i_bs_validate_unicode_retract_j; \
CountCase(i_bsl_jId): opc[150].count++; goto lb_i_bsl_jId; \
CountCase(i_bsr_jId): opc[151].count++; goto lb_i_bsr_jId; \
CountCase(i_bxor_jId): opc[152].count++; goto lb_i_bxor_jId; \
CountCase(i_call_f): opc[153].count++; goto lb_i_call_f; \
CountCase(i_call_ext_e): opc[154].count++; goto lb_i_call_ext_e; \
CountCase(i_call_ext_last_eP): opc[155].count++; goto lb_i_call_ext_last_eP; \
CountCase(i_call_ext_only_e): opc[156].count++; goto lb_i_call_ext_only_e; \
CountCase(i_call_fun_I): opc[157].count++; goto lb_i_call_fun_I; \
CountCase(i_call_fun_last_IP): opc[158].count++; goto lb_i_call_fun_last_IP; \
CountCase(i_call_last_fP): opc[159].count++; goto lb_i_call_last_fP; \
CountCase(i_call_only_f): opc[160].count++; goto lb_i_call_only_f; \
CountCase(i_count_breakpoint): opc[161].count++; goto lb_i_count_breakpoint; \
CountCase(i_debug_breakpoint): opc[162].count++; goto lb_i_debug_breakpoint; \
CountCase(i_element_jssd): opc[163].count++; goto lb_i_element_jssd; \
CountCase(i_fadd_lll): opc[164].count++; goto lb_i_fadd_lll; \
CountCase(i_fast_element_jIsd): opc[165].count++; goto lb_i_fast_element_jIsd; \
CountCase(i_fcheckerror): opc[166].count++; goto lb_i_fcheckerror; \
CountCase(i_fdiv_lll): opc[167].count++; goto lb_i_fdiv_lll; \
CountCase(i_fetch_rx): opc[168].count++; goto lb_i_fetch_rx; \
CountCase(i_fetch_ry): opc[169].count++; goto lb_i_fetch_ry; \
CountCase(i_fetch_xr): opc[170].count++; goto lb_i_fetch_xr; \
CountCase(i_fetch_xx): opc[171].count++; goto lb_i_fetch_xx; \
CountCase(i_fetch_xy): opc[172].count++; goto lb_i_fetch_xy; \
CountCase(i_fetch_yr): opc[173].count++; goto lb_i_fetch_yr; \
CountCase(i_fetch_yx): opc[174].count++; goto lb_i_fetch_yx; \
CountCase(i_fetch_yy): opc[175].count++; goto lb_i_fetch_yy; \
CountCase(i_fetch_rc): opc[176].count++; goto lb_i_fetch_rc; \
CountCase(i_fetch_xc): opc[177].count++; goto lb_i_fetch_xc; \
CountCase(i_fetch_yc): opc[178].count++; goto lb_i_fetch_yc; \
CountCase(i_fetch_cr): opc[179].count++; goto lb_i_fetch_cr; \
CountCase(i_fetch_cx): opc[180].count++; goto lb_i_fetch_cx; \
CountCase(i_fetch_cy): opc[181].count++; goto lb_i_fetch_cy; \
CountCase(i_fetch_cc): opc[182].count++; goto lb_i_fetch_cc; \
CountCase(i_fetch_ss): opc[183].count++; goto lb_i_fetch_ss; \
CountCase(i_fmul_lll): opc[184].count++; goto lb_i_fmul_lll; \
CountCase(i_fnegate_ll): opc[185].count++; goto lb_i_fnegate_ll; \
CountCase(i_fsub_lll): opc[186].count++; goto lb_i_fsub_lll; \
CountCase(i_func_info_IaaI): opc[187].count++; goto lb_i_func_info_IaaI; \
CountCase(i_gc_bif1_jIsId): opc[188].count++; goto lb_i_gc_bif1_jIsId; \
CountCase(i_gc_bif2_jIId): opc[189].count++; goto lb_i_gc_bif2_jIId; \
CountCase(i_gc_bif3_jIsId): opc[190].count++; goto lb_i_gc_bif3_jIsId; \
CountCase(i_get_sd): opc[191].count++; goto lb_i_get_sd; \
CountCase(i_get_tuple_element_rPr): opc[192].count++; goto lb_i_get_tuple_element_rPr; \
CountCase(i_get_tuple_element_rPx): opc[193].count++; goto lb_i_get_tuple_element_rPx; \
CountCase(i_get_tuple_element_rPy): opc[194].count++; goto lb_i_get_tuple_element_rPy; \
CountCase(i_get_tuple_element_xPr): opc[195].count++; goto lb_i_get_tuple_element_xPr; \
CountCase(i_get_tuple_element_xPx): opc[196].count++; goto lb_i_get_tuple_element_xPx; \
CountCase(i_get_tuple_element_xPy): opc[197].count++; goto lb_i_get_tuple_element_xPy; \
CountCase(i_get_tuple_element_yPr): opc[198].count++; goto lb_i_get_tuple_element_yPr; \
CountCase(i_get_tuple_element_yPx): opc[199].count++; goto lb_i_get_tuple_element_yPx; \
CountCase(i_get_tuple_element_yPy): opc[200].count++; goto lb_i_get_tuple_element_yPy; \
CountCase(i_global_cons): opc[201].count++; goto lb_i_global_cons; \
CountCase(i_global_copy): opc[202].count++; goto lb_i_global_copy; \
CountCase(i_global_tuple): opc[203].count++; goto lb_i_global_tuple; \
CountCase(i_hibernate): opc[204].count++; goto lb_i_hibernate; \
CountCase(i_int_bnot_jsId): opc[205].count++; goto lb_i_int_bnot_jsId; \
CountCase(i_int_div_jId): opc[206].count++; goto lb_i_int_div_jId; \
CountCase(i_is_eq_f): opc[207].count++; goto lb_i_is_eq_f; \
CountCase(i_is_eq_exact_f): opc[208].count++; goto lb_i_is_eq_exact_f; \
CountCase(i_is_eq_immed_frc): opc[209].count++; goto lb_i_is_eq_immed_frc; \
CountCase(i_is_eq_immed_fxc): opc[210].count++; goto lb_i_is_eq_immed_fxc; \
CountCase(i_is_eq_immed_fyc): opc[211].count++; goto lb_i_is_eq_immed_fyc; \
CountCase(i_is_ge_f): opc[212].count++; goto lb_i_is_ge_f; \
CountCase(i_is_lt_f): opc[213].count++; goto lb_i_is_lt_f; \
CountCase(i_is_ne_f): opc[214].count++; goto lb_i_is_ne_f; \
CountCase(i_is_ne_exact_f): opc[215].count++; goto lb_i_is_ne_exact_f; \
CountCase(i_jump_on_val_sfII): opc[216].count++; goto lb_i_jump_on_val_sfII; \
CountCase(i_jump_on_val_zero_sfI): opc[217].count++; goto lb_i_jump_on_val_zero_sfI; \
CountCase(i_loop_rec_fr): opc[218].count++; goto lb_i_loop_rec_fr; \
CountCase(i_m_div_jId): opc[219].count++; goto lb_i_m_div_jId; \
CountCase(i_make_fun_It): opc[220].count++; goto lb_i_make_fun_It; \
CountCase(i_minus_jId): opc[221].count++; goto lb_i_minus_jId; \
CountCase(i_move_call_crf): opc[222].count++; goto lb_i_move_call_crf; \
CountCase(i_move_call_ext_cre): opc[223].count++; goto lb_i_move_call_ext_cre; \
CountCase(i_move_call_ext_last_ePcr): opc[224].count++; goto lb_i_move_call_ext_last_ePcr; \
CountCase(i_move_call_ext_only_ecr): opc[225].count++; goto lb_i_move_call_ext_only_ecr; \
CountCase(i_move_call_last_fPcr): opc[226].count++; goto lb_i_move_call_last_fPcr; \
CountCase(i_move_call_only_fcr): opc[227].count++; goto lb_i_move_call_only_fcr; \
CountCase(i_mtrace_breakpoint): opc[228].count++; goto lb_i_mtrace_breakpoint; \
CountCase(i_new_bs_put_binary_jsIs): opc[229].count++; goto lb_i_new_bs_put_binary_jsIs; \
CountCase(i_new_bs_put_binary_all_jsI): opc[230].count++; goto lb_i_new_bs_put_binary_all_jsI; \
CountCase(i_new_bs_put_binary_imm_jIs): opc[231].count++; goto lb_i_new_bs_put_binary_imm_jIs; \
CountCase(i_new_bs_put_float_jsIs): opc[232].count++; goto lb_i_new_bs_put_float_jsIs; \
CountCase(i_new_bs_put_float_imm_jIIs): opc[233].count++; goto lb_i_new_bs_put_float_imm_jIIs; \
CountCase(i_new_bs_put_integer_jsIs): opc[234].count++; goto lb_i_new_bs_put_integer_jsIs; \
CountCase(i_new_bs_put_integer_imm_jIIs): opc[235].count++; goto lb_i_new_bs_put_integer_imm_jIIs; \
CountCase(i_plus_jId): opc[236].count++; goto lb_i_plus_jId; \
CountCase(i_put_tuple_Anr): opc[237].count++; goto lb_i_put_tuple_Anr; \
CountCase(i_put_tuple_Anx): opc[238].count++; goto lb_i_put_tuple_Anx; \
CountCase(i_put_tuple_Arx): opc[239].count++; goto lb_i_put_tuple_Arx; \
CountCase(i_put_tuple_Ary): opc[240].count++; goto lb_i_put_tuple_Ary; \
CountCase(i_put_tuple_Axr): opc[241].count++; goto lb_i_put_tuple_Axr; \
CountCase(i_put_tuple_Axx): opc[242].count++; goto lb_i_put_tuple_Axx; \
CountCase(i_put_tuple_Axy): opc[243].count++; goto lb_i_put_tuple_Axy; \
CountCase(i_put_tuple_Ayr): opc[244].count++; goto lb_i_put_tuple_Ayr; \
CountCase(i_put_tuple_Ayx): opc[245].count++; goto lb_i_put_tuple_Ayx; \
CountCase(i_put_tuple_Ayy): opc[246].count++; goto lb_i_put_tuple_Ayy; \
CountCase(i_put_tuple_Acr): opc[247].count++; goto lb_i_put_tuple_Acr; \
CountCase(i_put_tuple_Acx): opc[248].count++; goto lb_i_put_tuple_Acx; \
CountCase(i_put_tuple_Acy): opc[249].count++; goto lb_i_put_tuple_Acy; \
CountCase(i_recv_set): opc[250].count++; goto lb_i_recv_set; \
CountCase(i_rem_jId): opc[251].count++; goto lb_i_rem_jId; \
CountCase(i_return_time_trace): opc[252].count++; goto lb_i_return_time_trace; \
CountCase(i_return_to_trace): opc[253].count++; goto lb_i_return_to_trace; \
CountCase(i_select_big_sf): opc[254].count++; goto lb_i_select_big_sf; \
CountCase(i_select_float_sfI): opc[255].count++; goto lb_i_select_float_sfI; \
CountCase(i_select_tuple_arity_sfI): opc[256].count++; goto lb_i_select_tuple_arity_sfI; \
CountCase(i_select_val_sfI): opc[257].count++; goto lb_i_select_val_sfI; \
CountCase(i_time_breakpoint): opc[258].count++; goto lb_i_time_breakpoint; \
CountCase(i_times_jId): opc[259].count++; goto lb_i_times_jId; \
CountCase(i_trace_breakpoint): opc[260].count++; goto lb_i_trace_breakpoint; \
CountCase(i_trim_I): opc[261].count++; goto lb_i_trim_I; \
CountCase(i_wait_error): opc[262].count++; goto lb_i_wait_error; \
CountCase(i_wait_error_locked): opc[263].count++; goto lb_i_wait_error_locked; \
CountCase(i_wait_timeout_fI): opc[264].count++; goto lb_i_wait_timeout_fI; \
CountCase(i_wait_timeout_fs): opc[265].count++; goto lb_i_wait_timeout_fs; \
CountCase(i_wait_timeout_locked_fI): opc[266].count++; goto lb_i_wait_timeout_locked_fI; \
CountCase(i_wait_timeout_locked_fs): opc[267].count++; goto lb_i_wait_timeout_locked_fs; \
CountCase(i_yield): opc[268].count++; goto lb_i_yield; \
CountCase(if_end): opc[269].count++; goto lb_if_end; \
CountCase(init_y): opc[270].count++; goto lb_init_y; \
CountCase(init2_yy): opc[271].count++; goto lb_init2_yy; \
CountCase(init3_yyy): opc[272].count++; goto lb_init3_yyy; \
CountCase(int_code_end): opc[273].count++; goto lb_int_code_end; \
CountCase(is_atom_fr): opc[274].count++; goto lb_is_atom_fr; \
CountCase(is_atom_fx): opc[275].count++; goto lb_is_atom_fx; \
CountCase(is_atom_fy): opc[276].count++; goto lb_is_atom_fy; \
CountCase(is_binary_fr): opc[277].count++; goto lb_is_binary_fr; \
CountCase(is_binary_fx): opc[278].count++; goto lb_is_binary_fx; \
CountCase(is_binary_fy): opc[279].count++; goto lb_is_binary_fy; \
CountCase(is_bitstring_fr): opc[280].count++; goto lb_is_bitstring_fr; \
CountCase(is_bitstring_fx): opc[281].count++; goto lb_is_bitstring_fx; \
CountCase(is_bitstring_fy): opc[282].count++; goto lb_is_bitstring_fy; \
CountCase(is_boolean_fr): opc[283].count++; goto lb_is_boolean_fr; \
CountCase(is_boolean_fx): opc[284].count++; goto lb_is_boolean_fx; \
CountCase(is_boolean_fy): opc[285].count++; goto lb_is_boolean_fy; \
CountCase(is_float_fr): opc[286].count++; goto lb_is_float_fr; \
CountCase(is_float_fx): opc[287].count++; goto lb_is_float_fx; \
CountCase(is_float_fy): opc[288].count++; goto lb_is_float_fy; \
CountCase(is_function_fr): opc[289].count++; goto lb_is_function_fr; \
CountCase(is_function_fx): opc[290].count++; goto lb_is_function_fx; \
CountCase(is_function_fy): opc[291].count++; goto lb_is_function_fy; \
CountCase(is_function2_fss): opc[292].count++; goto lb_is_function2_fss; \
CountCase(is_integer_fr): opc[293].count++; goto lb_is_integer_fr; \
CountCase(is_integer_fx): opc[294].count++; goto lb_is_integer_fx; \
CountCase(is_integer_fy): opc[295].count++; goto lb_is_integer_fy; \
CountCase(is_integer_allocate_frII): opc[296].count++; goto lb_is_integer_allocate_frII; \
CountCase(is_integer_allocate_fxII): opc[297].count++; goto lb_is_integer_allocate_fxII; \
CountCase(is_list_fr): opc[298].count++; goto lb_is_list_fr; \
CountCase(is_list_fx): opc[299].count++; goto lb_is_list_fx; \
CountCase(is_list_fy): opc[300].count++; goto lb_is_list_fy; \
CountCase(is_nil_fr): opc[301].count++; goto lb_is_nil_fr; \
CountCase(is_nil_fx): opc[302].count++; goto lb_is_nil_fx; \
CountCase(is_nil_fy): opc[303].count++; goto lb_is_nil_fy; \
CountCase(is_non_empty_list_test_heap_frII): opc[304].count++; goto lb_is_non_empty_list_test_heap_frII; \
CountCase(is_nonempty_list_fr): opc[305].count++; goto lb_is_nonempty_list_fr; \
CountCase(is_nonempty_list_fx): opc[306].count++; goto lb_is_nonempty_list_fx; \
CountCase(is_nonempty_list_fy): opc[307].count++; goto lb_is_nonempty_list_fy; \
CountCase(is_nonempty_list_allocate_frII): opc[308].count++; goto lb_is_nonempty_list_allocate_frII; \
CountCase(is_nonempty_list_allocate_fxII): opc[309].count++; goto lb_is_nonempty_list_allocate_fxII; \
CountCase(is_number_fr): opc[310].count++; goto lb_is_number_fr; \
CountCase(is_number_fx): opc[311].count++; goto lb_is_number_fx; \
CountCase(is_number_fy): opc[312].count++; goto lb_is_number_fy; \
CountCase(is_pid_fr): opc[313].count++; goto lb_is_pid_fr; \
CountCase(is_pid_fx): opc[314].count++; goto lb_is_pid_fx; \
CountCase(is_pid_fy): opc[315].count++; goto lb_is_pid_fy; \
CountCase(is_port_fr): opc[316].count++; goto lb_is_port_fr; \
CountCase(is_port_fx): opc[317].count++; goto lb_is_port_fx; \
CountCase(is_port_fy): opc[318].count++; goto lb_is_port_fy; \
CountCase(is_reference_fr): opc[319].count++; goto lb_is_reference_fr; \
CountCase(is_reference_fx): opc[320].count++; goto lb_is_reference_fx; \
CountCase(is_reference_fy): opc[321].count++; goto lb_is_reference_fy; \
CountCase(is_tuple_fr): opc[322].count++; goto lb_is_tuple_fr; \
CountCase(is_tuple_fx): opc[323].count++; goto lb_is_tuple_fx; \
CountCase(is_tuple_fy): opc[324].count++; goto lb_is_tuple_fy; \
CountCase(is_tuple_of_arity_frA): opc[325].count++; goto lb_is_tuple_of_arity_frA; \
CountCase(is_tuple_of_arity_fxA): opc[326].count++; goto lb_is_tuple_of_arity_fxA; \
CountCase(is_tuple_of_arity_fyA): opc[327].count++; goto lb_is_tuple_of_arity_fyA; \
CountCase(jump_f): opc[328].count++; goto lb_jump_f; \
CountCase(label_L): opc[329].count++; goto lb_label_L; \
CountCase(loop_rec_end_f): opc[330].count++; goto lb_loop_rec_end_f; \
CountCase(move_nr): opc[331].count++; goto lb_move_nr; \
CountCase(move_nx): opc[332].count++; goto lb_move_nx; \
CountCase(move_rx): opc[333].count++; goto lb_move_rx; \
CountCase(move_ry): opc[334].count++; goto lb_move_ry; \
CountCase(move_xr): opc[335].count++; goto lb_move_xr; \
CountCase(move_xx): opc[336].count++; goto lb_move_xx; \
CountCase(move_xy): opc[337].count++; goto lb_move_xy; \
CountCase(move_yr): opc[338].count++; goto lb_move_yr; \
CountCase(move_yx): opc[339].count++; goto lb_move_yx; \
CountCase(move_yy): opc[340].count++; goto lb_move_yy; \
CountCase(move_cr): opc[341].count++; goto lb_move_cr; \
CountCase(move_cx): opc[342].count++; goto lb_move_cx; \
CountCase(move_cy): opc[343].count++; goto lb_move_cy; \
CountCase(move_sd): opc[344].count++; goto lb_move_sd; \
CountCase(move2_xyxy): opc[345].count++; goto lb_move2_xyxy; \
CountCase(move2_yxyx): opc[346].count++; goto lb_move2_yxyx; \
CountCase(move_call_xrf): opc[347].count++; goto lb_move_call_xrf; \
CountCase(move_call_yrf): opc[348].count++; goto lb_move_call_yrf; \
CountCase(move_call_last_xrfP): opc[349].count++; goto lb_move_call_last_xrfP; \
CountCase(move_call_last_yrfP): opc[350].count++; goto lb_move_call_last_yrfP; \
CountCase(move_call_only_xrf): opc[351].count++; goto lb_move_call_only_xrf; \
CountCase(move_deallocate_return_nrP): opc[352].count++; goto lb_move_deallocate_return_nrP; \
CountCase(move_deallocate_return_xrP): opc[353].count++; goto lb_move_deallocate_return_xrP; \
CountCase(move_deallocate_return_yrP): opc[354].count++; goto lb_move_deallocate_return_yrP; \
CountCase(move_deallocate_return_crP): opc[355].count++; goto lb_move_deallocate_return_crP; \
CountCase(move_return_nr): opc[356].count++; goto lb_move_return_nr; \
CountCase(move_return_xr): opc[357].count++; goto lb_move_return_xr; \
CountCase(move_return_cr): opc[358].count++; goto lb_move_return_cr; \
CountCase(node_r): opc[359].count++; goto lb_node_r; \
CountCase(node_x): opc[360].count++; goto lb_node_x; \
CountCase(node_y): opc[361].count++; goto lb_node_y; \
CountCase(normal_exit): opc[362].count++; goto lb_normal_exit; \
CountCase(on_load): opc[363].count++; goto lb_on_load; \
CountCase(put_n): opc[364].count++; goto lb_put_n; \
CountCase(put_r): opc[365].count++; goto lb_put_r; \
CountCase(put_x): opc[366].count++; goto lb_put_x; \
CountCase(put_y): opc[367].count++; goto lb_put_y; \
CountCase(put_c): opc[368].count++; goto lb_put_c; \
CountCase(put_list_rnx): opc[369].count++; goto lb_put_list_rnx; \
CountCase(put_list_rxr): opc[370].count++; goto lb_put_list_rxr; \
CountCase(put_list_rxx): opc[371].count++; goto lb_put_list_rxx; \
CountCase(put_list_ryx): opc[372].count++; goto lb_put_list_ryx; \
CountCase(put_list_xnx): opc[373].count++; goto lb_put_list_xnx; \
CountCase(put_list_xrr): opc[374].count++; goto lb_put_list_xrr; \
CountCase(put_list_xxr): opc[375].count++; goto lb_put_list_xxr; \
CountCase(put_list_xxx): opc[376].count++; goto lb_put_list_xxx; \
CountCase(put_list_xyx): opc[377].count++; goto lb_put_list_xyx; \
CountCase(put_list_ynx): opc[378].count++; goto lb_put_list_ynx; \
CountCase(put_list_yrr): opc[379].count++; goto lb_put_list_yrr; \
CountCase(put_list_yrx): opc[380].count++; goto lb_put_list_yrx; \
CountCase(put_list_yxx): opc[381].count++; goto lb_put_list_yxx; \
CountCase(put_list_yyr): opc[382].count++; goto lb_put_list_yyr; \
CountCase(put_list_yyx): opc[383].count++; goto lb_put_list_yyx; \
CountCase(put_list_rcr): opc[384].count++; goto lb_put_list_rcr; \
CountCase(put_list_rcx): opc[385].count++; goto lb_put_list_rcx; \
CountCase(put_list_rcy): opc[386].count++; goto lb_put_list_rcy; \
CountCase(put_list_xcr): opc[387].count++; goto lb_put_list_xcr; \
CountCase(put_list_xcx): opc[388].count++; goto lb_put_list_xcx; \
CountCase(put_list_xcy): opc[389].count++; goto lb_put_list_xcy; \
CountCase(put_list_ycr): opc[390].count++; goto lb_put_list_ycr; \
CountCase(put_list_ycx): opc[391].count++; goto lb_put_list_ycx; \
CountCase(put_list_ycy): opc[392].count++; goto lb_put_list_ycy; \
CountCase(put_list_cnr): opc[393].count++; goto lb_put_list_cnr; \
CountCase(put_list_cnx): opc[394].count++; goto lb_put_list_cnx; \
CountCase(put_list_crr): opc[395].count++; goto lb_put_list_crr; \
CountCase(put_list_crx): opc[396].count++; goto lb_put_list_crx; \
CountCase(put_list_cry): opc[397].count++; goto lb_put_list_cry; \
CountCase(put_list_cxr): opc[398].count++; goto lb_put_list_cxr; \
CountCase(put_list_cxx): opc[399].count++; goto lb_put_list_cxx; \
CountCase(put_list_cxy): opc[400].count++; goto lb_put_list_cxy; \
CountCase(put_list_cyr): opc[401].count++; goto lb_put_list_cyr; \
CountCase(put_list_cyx): opc[402].count++; goto lb_put_list_cyx; \
CountCase(put_list_cyy): opc[403].count++; goto lb_put_list_cyy; \
CountCase(put_list_ssd): opc[404].count++; goto lb_put_list_ssd; \
CountCase(raise_ss): opc[405].count++; goto lb_raise_ss; \
CountCase(recv_mark_f): opc[406].count++; goto lb_recv_mark_f; \
CountCase(remove_message): opc[407].count++; goto lb_remove_message; \
CountCase(return): opc[408].count++; goto lb_return; \
CountCase(return_trace): opc[409].count++; goto lb_return_trace; \
CountCase(self_r): opc[410].count++; goto lb_self_r; \
CountCase(self_x): opc[411].count++; goto lb_self_x; \
CountCase(self_y): opc[412].count++; goto lb_self_y; \
CountCase(send): opc[413].count++; goto lb_send; \
CountCase(set_tuple_element_sdP): opc[414].count++; goto lb_set_tuple_element_sdP; \
CountCase(system_limit_j): opc[415].count++; goto lb_system_limit_j; \
CountCase(test_arity_frA): opc[416].count++; goto lb_test_arity_frA; \
CountCase(test_arity_fxA): opc[417].count++; goto lb_test_arity_fxA; \
CountCase(test_arity_fyA): opc[418].count++; goto lb_test_arity_fyA; \
CountCase(test_heap_II): opc[419].count++; goto lb_test_heap_II; \
CountCase(test_heap_1_put_list_Iy): opc[420].count++; goto lb_test_heap_1_put_list_Iy; \
CountCase(timeout): opc[421].count++; goto lb_timeout; \
CountCase(timeout_locked): opc[422].count++; goto lb_timeout_locked; \
CountCase(too_old_compiler): opc[423].count++; goto lb_too_old_compiler; \
CountCase(try_case_end_s): opc[424].count++; goto lb_try_case_end_s; \
CountCase(try_end_y): opc[425].count++; goto lb_try_end_y; \
CountCase(wait_f): opc[426].count++; goto lb_wait_f; \
CountCase(wait_locked_f): opc[427].count++; goto lb_wait_locked_f; \
CountCase(wait_unlocked_f): opc[428].count++; goto lb_wait_unlocked_f;

#define genop_label_1 1
#define genop_func_info_3 2
#define genop_int_code_end_0 3
#define genop_call_2 4
#define genop_call_last_3 5
#define genop_call_only_2 6
#define genop_call_ext_2 7
#define genop_call_ext_last_3 8
#define genop_bif0_2 9
#define genop_bif1_4 10
#define genop_bif2_5 11
#define genop_allocate_2 12
#define genop_allocate_heap_3 13
#define genop_allocate_zero_2 14
#define genop_allocate_heap_zero_3 15
#define genop_test_heap_2 16
#define genop_init_1 17
#define genop_deallocate_1 18
#define genop_return_0 19
#define genop_send_0 20
#define genop_remove_message_0 21
#define genop_timeout_0 22
#define genop_loop_rec_2 23
#define genop_loop_rec_end_1 24
#define genop_wait_1 25
#define genop_wait_timeout_2 26
#define genop_m_plus_4 27
#define genop_m_minus_4 28
#define genop_m_times_4 29
#define genop_m_div_4 30
#define genop_int_div_4 31
#define genop_int_rem_4 32
#define genop_int_band_4 33
#define genop_int_bor_4 34
#define genop_int_bxor_4 35
#define genop_int_bsl_4 36
#define genop_int_bsr_4 37
#define genop_int_bnot_3 38
#define genop_is_lt_3 39
#define genop_is_ge_3 40
#define genop_is_eq_3 41
#define genop_is_ne_3 42
#define genop_is_eq_exact_3 43
#define genop_is_ne_exact_3 44
#define genop_is_integer_2 45
#define genop_is_float_2 46
#define genop_is_number_2 47
#define genop_is_atom_2 48
#define genop_is_pid_2 49
#define genop_is_reference_2 50
#define genop_is_port_2 51
#define genop_is_nil_2 52
#define genop_is_binary_2 53
#define genop_is_constant_2 54
#define genop_is_list_2 55
#define genop_is_nonempty_list_2 56
#define genop_is_tuple_2 57
#define genop_test_arity_3 58
#define genop_select_val_3 59
#define genop_select_tuple_arity_3 60
#define genop_jump_1 61
#define genop_catch_2 62
#define genop_catch_end_1 63
#define genop_move_2 64
#define genop_get_list_3 65
#define genop_get_tuple_element_3 66
#define genop_set_tuple_element_3 67
#define genop_put_string_3 68
#define genop_put_list_3 69
#define genop_put_tuple_2 70
#define genop_put_1 71
#define genop_badmatch_1 72
#define genop_if_end_0 73
#define genop_case_end_1 74
#define genop_call_fun_1 75
#define genop_make_fun_3 76
#define genop_is_function_2 77
#define genop_call_ext_only_2 78
#define genop_bs_start_match_2 79
#define genop_bs_get_integer_5 80
#define genop_bs_get_float_5 81
#define genop_bs_get_binary_5 82
#define genop_bs_skip_bits_4 83
#define genop_bs_test_tail_2 84
#define genop_bs_save_1 85
#define genop_bs_restore_1 86
#define genop_bs_init_2 87
#define genop_bs_final_2 88
#define genop_bs_put_integer_5 89
#define genop_bs_put_binary_5 90
#define genop_bs_put_float_5 91
#define genop_bs_put_string_2 92
#define genop_bs_need_buf_1 93
#define genop_fclearerror_0 94
#define genop_fcheckerror_1 95
#define genop_fmove_2 96
#define genop_fconv_2 97
#define genop_fadd_4 98
#define genop_fsub_4 99
#define genop_fmul_4 100
#define genop_fdiv_4 101
#define genop_fnegate_3 102
#define genop_make_fun2_1 103
#define genop_try_2 104
#define genop_try_end_1 105
#define genop_try_case_1 106
#define genop_try_case_end_1 107
#define genop_raise_2 108
#define genop_bs_init2_6 109
#define genop_bs_bits_to_bytes_3 110
#define genop_bs_add_5 111
#define genop_apply_1 112
#define genop_apply_last_2 113
#define genop_is_boolean_2 114
#define genop_is_function2_3 115
#define genop_bs_start_match2_5 116
#define genop_bs_get_integer2_7 117
#define genop_bs_get_float2_7 118
#define genop_bs_get_binary2_7 119
#define genop_bs_skip_bits2_5 120
#define genop_bs_test_tail2_3 121
#define genop_bs_save2_2 122
#define genop_bs_restore2_2 123
#define genop_gc_bif1_5 124
#define genop_gc_bif2_6 125
#define genop_bs_final2_2 126
#define genop_bs_bits_to_bytes2_2 127
#define genop_put_literal_2 128
#define genop_is_bitstr_2 129
#define genop_bs_context_to_binary_1 130
#define genop_bs_test_unit_3 131
#define genop_bs_match_string_4 132
#define genop_bs_init_writable_0 133
#define genop_bs_append_8 134
#define genop_bs_private_append_6 135
#define genop_trim_2 136
#define genop_bs_init_bits_6 137
#define genop_bs_get_utf8_5 138
#define genop_bs_skip_utf8_4 139
#define genop_bs_get_utf16_5 140
#define genop_bs_skip_utf16_4 141
#define genop_bs_get_utf32_5 142
#define genop_bs_skip_utf32_4 143
#define genop_bs_utf8_size_3 144
#define genop_bs_put_utf8_3 145
#define genop_bs_utf16_size_3 146
#define genop_bs_put_utf16_3 147
#define genop_bs_put_utf32_3 148
#define genop_on_load_0 149
#define genop_recv_mark_1 150
#define genop_recv_set_1 151
#define genop_gc_bif3_7 152
#define genop_too_old_compiler_0 153
#define genop_i_func_info_4 154
#define genop_i_trace_breakpoint_0 155
#define genop_i_mtrace_breakpoint_0 156
#define genop_i_debug_breakpoint_0 157
#define genop_i_count_breakpoint_0 158
#define genop_i_time_breakpoint_0 159
#define genop_i_return_time_trace_0 160
#define genop_i_return_to_trace_0 161
#define genop_i_yield_0 162
#define genop_i_global_cons_0 163
#define genop_i_global_tuple_0 164
#define genop_i_global_copy_0 165
#define genop_i_trim_1 166
#define genop_init2_2 167
#define genop_init3_3 168
#define genop_i_select_val_3 169
#define genop_i_select_tuple_arity_3 170
#define genop_i_select_big_2 171
#define genop_i_select_float_3 172
#define genop_i_jump_on_val_zero_3 173
#define genop_i_jump_on_val_4 174
#define genop_i_get_tuple_element_3 175
#define genop_badarg_1 176
#define genop_system_limit_1 177
#define genop_move2_4 178
#define genop_timeout_locked_0 179
#define genop_i_loop_rec_2 180
#define genop_wait_locked_1 181
#define genop_wait_unlocked_1 182
#define genop_i_wait_timeout_2 183
#define genop_i_wait_timeout_locked_2 184
#define genop_i_wait_error_0 185
#define genop_i_wait_error_locked_0 186
#define genop_i_is_lt_1 187
#define genop_i_is_ge_1 188
#define genop_i_is_eq_1 189
#define genop_i_is_ne_1 190
#define genop_i_is_eq_exact_1 191
#define genop_i_is_ne_exact_1 192
#define genop_i_is_eq_immed_3 193
#define genop_i_put_tuple_3 194
#define genop_i_fetch_2 195
#define genop_normal_exit_0 196
#define genop_continue_exit_0 197
#define genop_apply_bif_0 198
#define genop_call_nif_0 199
#define genop_call_error_handler_0 200
#define genop_error_action_code_0 201
#define genop_call_traced_function_0 202
#define genop_return_trace_0 203
#define genop_move_return_2 204
#define genop_move_deallocate_return_3 205
#define genop_deallocate_return_1 206
#define genop_test_heap_1_put_list_2 207
#define genop_is_tuple_of_arity_3 208
#define genop_original_reg_2 209
#define genop_extract_next_element_1 210
#define genop_extract_next_element2_1 211
#define genop_extract_next_element3_1 212
#define genop_is_integer_allocate_4 213
#define genop_is_nonempty_list_allocate_4 214
#define genop_is_non_empty_list_test_heap_4 215
#define genop_is_bitstring_2 216
#define genop_allocate_init_3 217
#define genop_i_apply_0 218
#define genop_i_apply_last_1 219
#define genop_i_apply_only_0 220
#define genop_i_apply_fun_0 221
#define genop_i_apply_fun_last_1 222
#define genop_i_apply_fun_only_0 223
#define genop_i_hibernate_0 224
#define genop_call_bif0_1 225
#define genop_call_bif1_1 226
#define genop_call_bif2_1 227
#define genop_call_bif3_1 228
#define genop_i_get_2 229
#define genop_self_1 230
#define genop_node_1 231
#define genop_i_fast_element_4 232
#define genop_i_element_4 233
#define genop_bif1_body_3 234
#define genop_i_bif2_3 235
#define genop_i_bif2_body_2 236
#define genop_i_move_call_3 237
#define genop_move_call_3 238
#define genop_i_move_call_last_4 239
#define genop_move_call_last_4 240
#define genop_i_move_call_only_3 241
#define genop_move_call_only_3 242
#define genop_i_call_1 243
#define genop_i_call_last_2 244
#define genop_i_call_only_1 245
#define genop_i_call_ext_1 246
#define genop_i_call_ext_last_2 247
#define genop_i_call_ext_only_1 248
#define genop_i_move_call_ext_3 249
#define genop_i_move_call_ext_last_4 250
#define genop_i_move_call_ext_only_3 251
#define genop_i_call_fun_1 252
#define genop_i_call_fun_last_2 253
#define genop_i_make_fun_2 254
#define genop_i_bs_start_match2_5 255
#define genop_i_bs_save2_2 256
#define genop_i_bs_restore2_2 257
#define genop_i_bs_match_string_4 258
#define genop_i_bs_get_integer_small_imm_5 259
#define genop_i_bs_get_integer_imm_6 260
#define genop_i_bs_get_integer_4 261
#define genop_i_bs_get_integer_8_3 262
#define genop_i_bs_get_integer_16_3 263
#define genop_i_bs_get_integer_32_4 264
#define genop_i_bs_get_binary_imm2_6 265
#define genop_i_bs_get_binary2_6 266
#define genop_i_bs_get_binary_all2_5 267
#define genop_i_bs_get_binary_all_reuse_3 268
#define genop_i_bs_get_float2_6 269
#define genop_i_bs_skip_bits_imm2_3 270
#define genop_i_bs_skip_bits2_4 271
#define genop_i_bs_skip_bits_all2_3 272
#define genop_bs_test_zero_tail2_2 273
#define genop_bs_test_tail_imm2_3 274
#define genop_bs_test_unit8_2 275
#define genop_i_bs_get_utf8_3 276
#define genop_i_bs_get_utf16_4 277
#define genop_i_bs_validate_unicode_retract_1 278
#define genop_i_bs_init_fail_4 279
#define genop_i_bs_init_fail_heap_4 280
#define genop_i_bs_init_3 281
#define genop_i_bs_init_heap_bin_3 282
#define genop_i_bs_init_heap_4 283
#define genop_i_bs_init_heap_bin_heap_4 284
#define genop_i_bs_init_bits_fail_4 285
#define genop_i_bs_init_bits_fail_heap_4 286
#define genop_i_bs_init_bits_3 287
#define genop_i_bs_init_bits_heap_4 288
#define genop_i_bs_add_3 289
#define genop_i_bs_append_5 290
#define genop_i_bs_private_append_3 291
#define genop_i_new_bs_put_integer_4 292
#define genop_i_new_bs_put_integer_imm_4 293
#define genop_i_bs_utf8_size_2 294
#define genop_i_bs_utf16_size_2 295
#define genop_i_bs_put_utf8_2 296
#define genop_i_bs_put_utf16_3 297
#define genop_i_bs_validate_unicode_2 298
#define genop_i_new_bs_put_float_4 299
#define genop_i_new_bs_put_float_imm_4 300
#define genop_i_new_bs_put_binary_4 301
#define genop_i_new_bs_put_binary_imm_3 302
#define genop_i_new_bs_put_binary_all_3 303
#define genop_i_fadd_3 304
#define genop_i_fsub_3 305
#define genop_i_fmul_3 306
#define genop_i_fdiv_3 307
#define genop_i_fnegate_2 308
#define genop_i_fcheckerror_0 309
#define genop_fmove_new_2 310
#define genop_i_plus_3 311
#define genop_i_minus_3 312
#define genop_i_times_3 313
#define genop_i_m_div_3 314
#define genop_i_int_div_3 315
#define genop_i_rem_3 316
#define genop_i_bsl_3 317
#define genop_i_bsr_3 318
#define genop_i_band_3 319
#define genop_i_bor_3 320
#define genop_i_bxor_3 321
#define genop_i_int_bnot_4 322
#define genop_i_gc_bif1_5 323
#define genop_ii_gc_bif2_6 324
#define genop_i_gc_bif2_4 325
#define genop_ii_gc_bif3_7 326
#define genop_i_gc_bif3_5 327
#define genop_i_recv_set_0 328
#endif
